{
    "openapi": "3.0.1",
    "info": {
        "title": "Quote",
        "description": "**TMF API Reference : TMF 648 - Quote **\n\n** September 2021**\n\nThe Quote API provides a standardized mechanism for placing a quote with all of the necessary parameters. The API consists of a simple set of operations that interact with CRM/Quote/Pricing Negotiation systems in a consistent manner. A Quote is created based on product offering(s) that is(are) defined in a catalog. The quote identifies the product or set of products that are available to a customer for pricing request, and includes product characteristics.\n\nThe Quote references the product offer(s) which (future) customer request pricing.\nQuote resource features authorization subclass to manage special pricing UC requiring authorization tracking management\n\n**Quote resource**\nA Quote can be used to request pricing between a customer and a service provider or between a service provider and a partner and vice versa. Main quote attributes are its identifier, state, priority, related dates (requested, expected, valid, completion, etc.), related parties and quote items. Main Quote Items attributes are the discribed offering and product characteristics with the related action to be performed (e.g. add, change or delete the products), location information, and product characteristics.\n\nQuote API performs the following operations on Quote :\n\n- Retrieval of a quote or a collection of quotes depending on filter criteria\n- Partial update of a quote (including updating rules)\n- Creation of a quote (including default values and creation rules)\n- Deletion of quote (for administration purposes)\n- Notification of events on quote.\n\nCopyright \u00a9 TM Forum 2021. All Rights Reserved\n\n",
        "version": "5.0.0"
    },
    "servers": [
        {
            "url": "https://serverRoot"
        }
    ],
    "tags": [
        {
            "name": "quote",
            "description": "Operations for Quote Resource"
        },
        {
            "name": "quoteCreateEvent",
            "description": "Operations for QuoteCreateEvent Resource"
        },
        {
            "name": "quoteStateChangeEvent",
            "description": "Operations for QuoteStateChangeEvent Resource"
        },
        {
            "name": "quoteDeleteEvent",
            "description": "Operations for QuoteDeleteEvent Resource"
        },
        {
            "name": "quoteInformationRequiredEvent",
            "description": "Operations for QuoteInformationRequiredEvent Resource"
        },
        {
            "name": "quoteAttributeValueChangeEvent",
            "description": "Operations for QuoteAttributeValueChangeEvent Resource"
        },
        {
            "name": "notification listener",
            "description": "Notifications for Resource Lifecycle and event notifications"
        },
        {
            "name": "events subscription",
            "description": "Endpoints to register and terminate an Event Listener"
        }
    ],
    "paths": {
        "/quote": {
            "get": {
                "tags": [
                    "quote"
                ],
                "summary": "List or find Quote objects",
                "description": "This operation retrieves a Quote entity. Attribute selection enabled for all first level attributes.",
                "operationId": "listQuote",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Fields"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200QuoteArray"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "quote"
                ],
                "summary": "Creates a Quote",
                "description": "This operation creates a Quote entity.",
                "operationId": "createQuote",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Quote_Create"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201Quote"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/quote/{id}": {
            "get": {
                "tags": [
                    "quote"
                ],
                "summary": "Retrieves a Quote by ID",
                "description": "List or find Quote objects",
                "operationId": "retrieveQuote",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200Quote_Get"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "quote"
                ],
                "summary": "Deletes a Quote",
                "description": "This operation deletes a Quote entity.",
                "operationId": "deleteQuote",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "quote"
                ],
                "summary": "Updates partially a Quote",
                "description": "This operation updates partially a Quote entity.",
                "operationId": "patchQuote",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Id"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Quote_Update"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200Quote_Patch"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/quoteCreateEvent": {
            "post": {
                "tags": [
                    "quoteCreateEvent"
                ],
                "summary": "Creates a QuoteCreateEvent",
                "description": "This operation creates a QuoteCreateEvent entity.",
                "operationId": "createQuoteCreateEvent",
                "requestBody": {
                    "$ref": "#/components/requestBodies/QuoteCreateEvent_Create"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201QuoteCreateEvent"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/quoteCreateEvent/{id}": {},
        "/quoteStateChangeEvent": {
            "post": {
                "tags": [
                    "quoteStateChangeEvent"
                ],
                "summary": "Creates a QuoteStateChangeEvent",
                "description": "This operation creates a QuoteStateChangeEvent entity.",
                "operationId": "createQuoteStateChangeEvent",
                "requestBody": {
                    "$ref": "#/components/requestBodies/QuoteStateChangeEvent_Create"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201QuoteStateChangeEvent"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/quoteStateChangeEvent/{id}": {},
        "/quoteDeleteEvent": {
            "post": {
                "tags": [
                    "quoteDeleteEvent"
                ],
                "summary": "Creates a QuoteDeleteEvent",
                "description": "This operation creates a QuoteDeleteEvent entity.",
                "operationId": "createQuoteDeleteEvent",
                "requestBody": {
                    "$ref": "#/components/requestBodies/QuoteDeleteEvent_Create"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201QuoteDeleteEvent"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/quoteDeleteEvent/{id}": {},
        "/quoteInformationRequiredEvent": {
            "post": {
                "tags": [
                    "quoteInformationRequiredEvent"
                ],
                "summary": "Creates a QuoteInformationRequiredEvent",
                "description": "This operation creates a QuoteInformationRequiredEvent entity.",
                "operationId": "createQuoteInformationRequiredEvent",
                "requestBody": {
                    "$ref": "#/components/requestBodies/QuoteInformationRequiredEvent_Create"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201QuoteInformationRequiredEvent"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/quoteInformationRequiredEvent/{id}": {},
        "/quoteAttributeValueChangeEvent": {
            "post": {
                "tags": [
                    "quoteAttributeValueChangeEvent"
                ],
                "summary": "Creates a QuoteAttributeValueChangeEvent",
                "description": "This operation creates a QuoteAttributeValueChangeEvent entity.",
                "operationId": "createQuoteAttributeValueChangeEvent",
                "requestBody": {
                    "$ref": "#/components/requestBodies/QuoteAttributeValueChangeEvent_Create"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201QuoteAttributeValueChangeEvent"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/quoteAttributeValueChangeEvent/{id}": {},
        "/hub": {
            "post": {
                "operationId": "registerListener",
                "summary": "Register a listener",
                "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
                "tags": [
                    "events subscription"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/EventSubscriptionInput"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/EventSubscription"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/hub/{id}": {
            "delete": {
                "operationId": "unregisterListener",
                "summary": "Unregister a listener",
                "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
                "tags": [
                    "events subscription"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BooleanArrayCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Characteristic"
                    },
                    {
                        "description": "A characteristic which value is an array of Boolean(s).",
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "array",
                                "items": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ]
            },
            "Characteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Extensible"
                    },
                    {
                        "description": "Describes a given characteristic of an object or entity through a name/value pair.",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Unique identifier of the characteristic"
                            },
                            "valueType": {
                                "type": "string",
                                "description": "Data type of the value of the characteristic"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the characteristic"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "Characteristic": "#/components/schemas/Characteristic",
                        "StringCharacteristic": "#/components/schemas/StringCharacteristic",
                        "StringArrayCharacteristic": "#/components/schemas/StringArrayCharacteristic",
                        "ObjectCharacteristic": "#/components/schemas/ObjectCharacteristic",
                        "ObjectArrayCharacteristic": "#/components/schemas/ObjectArrayCharacteristic",
                        "NumberCharacteristic": "#/components/schemas/NumberCharacteristic",
                        "NumberArrayCharacteristic": "#/components/schemas/NumberArrayCharacteristic",
                        "IntegerCharacteristic": "#/components/schemas/IntegerCharacteristic",
                        "IntegerArrayCharacteristic": "#/components/schemas/IntegerArrayCharacteristic",
                        "BooleanCharacteristic": "#/components/schemas/BooleanCharacteristic",
                        "BooleanArrayCharacteristic": "#/components/schemas/BooleanArrayCharacteristic"
                    }
                }
            },
            "Extensible": {
                "type": "object",
                "description": "Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means that the Entity described by the schema  MUST be extended with the @type",
                "properties": {
                    "@type": {
                        "type": "string",
                        "description": "When sub-classing, this defines the sub-class Extensible name"
                    },
                    "@baseType": {
                        "type": "string",
                        "description": "When sub-classing, this defines the super-class"
                    },
                    "@schemaLocation": {
                        "type": "string",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                    }
                }
            },
            "BooleanCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Characteristic"
                    },
                    {
                        "description": "A characteristic which value is a Boolean.",
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "boolean",
                                "description": "Value of the characteristic"
                            }
                        }
                    }
                ]
            },
            "EmailContactMedium": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ContactMedium"
                    },
                    {
                        "type": "object",
                        "description": "Describes an email that could be used to contact a party (an individual or an organization)",
                        "properties": {
                            "emailAddress": {
                                "type": "string",
                                "description": "Full email address in standard format"
                            }
                        }
                    }
                ]
            },
            "ContactMedium": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Extensible"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Indicates the contact medium that could be used to contact the party.",
                        "type": "object",
                        "properties": {
                            "contactMediumIdentifier": {
                                "type": "string",
                                "description": "Identifier for this contact medium."
                            },
                            "preferred": {
                                "type": "boolean",
                                "description": "If true, indicates that is the preferred contact medium"
                            },
                            "contactType": {
                                "type": "string",
                                "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                            },
                            "validFor": {
                                "$ref": "#/components/schemas/TimePeriod"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "ContactMedium": "#/components/schemas/ContactMedium",
                        "PhoneContactMedium": "#/components/schemas/PhoneContactMedium",
                        "EmailContactMedium": "#/components/schemas/EmailContactMedium"
                    }
                }
            },
            "TimePeriod": {
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "type": "object",
                "properties": {
                    "startDateTime": {
                        "description": "Start of the time period, using IETC-RFC-3339 format",
                        "type": "string",
                        "format": "date-time",
                        "example": "1985-04-12T23:20:50.52Z"
                    },
                    "endDateTime": {
                        "description": "End of the time period, using IETC-RFC-3339 format",
                        "type": "string",
                        "format": "date-time",
                        "example": "1985-04-12T23:20:50.52Z"
                    }
                }
            },
            "SchemaContext": {
                "type": "object",
                "description": "SchemaContext schema for use in TMForum Open-APIs",
                "properties": {
                    "@schemaLocation": {
                        "type": "string",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                    },
                    "@baseType": {
                        "type": "string",
                        "description": "When sub-classing, this defines the super-class"
                    },
                    "@type": {
                        "type": "string",
                        "description": "When sub-classing, this defines the sub-class Extensible name"
                    }
                }
            },
            "GeographicAddressValue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RelatedPlaceRefOrValue"
                    },
                    {
                        "$ref": "#/components/schemas/Extensible"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Structured textual way of describing how to find a Property in an urban area (country properties are often defined differently).\nNote : Address corresponds to SID UrbanPropertyAddress",
                        "type": "object",
                        "properties": {
                            "locality": {
                                "type": "string",
                                "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                            },
                            "postcode": {
                                "type": "string",
                                "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "description": "the State or Province that the address is in"
                            },
                            "streetNr": {
                                "type": "string",
                                "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                            },
                            "streetNrLast": {
                                "type": "string",
                                "description": "Last number in a range of street numbers allocated to a property"
                            },
                            "streetNrLastSuffix": {
                                "type": "string",
                                "description": "Last street number suffix for a ranged address"
                            },
                            "streetNrSuffix": {
                                "type": "string",
                                "description": "the first street number suffix"
                            },
                            "streetSuffix": {
                                "type": "string",
                                "description": "A modifier denoting a relative direction"
                            },
                            "streetType": {
                                "type": "string",
                                "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                            },
                            "geographicSubAddress": {
                                "$ref": "#/components/schemas/GeographicSubAddressValue"
                            },
                            "city": {
                                "type": "string",
                                "description": "City that the address is in"
                            },
                            "country": {
                                "type": "string",
                                "description": "Country that the address is in"
                            },
                            "streetName": {
                                "type": "string",
                                "description": "Name of the street or other street type"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "GeographicAddressValue": "#/components/schemas/GeographicAddressValue"
                    }
                }
            },
            "GeographicSubAddressValue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Extensible"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Representation of a GeographicSubAddress \nIt is used for addressing within a property in an urban area (country properties are often defined differently). It may refer to a building, a building cluster, or a floor of a multistory building.",
                        "type": "object",
                        "properties": {
                            "buildingName": {
                                "type": "string",
                                "description": "allows for buildings that have well-known names"
                            },
                            "levelNumber": {
                                "type": "string",
                                "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                            },
                            "levelType": {
                                "type": "string",
                                "description": "describes level types within a building"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the subAddress to identify it with a meaningful identification"
                            },
                            "privateStreetName": {
                                "type": "string",
                                "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                            },
                            "privateStreetNumber": {
                                "type": "string",
                                "description": "private streets numbers internal to a private street"
                            },
                            "subUnit": {
                                "type": "array",
                                "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                "items": {
                                    "$ref": "#/components/schemas/GeographicSubAddressUnit"
                                }
                            },
                            "subAddressType": {
                                "type": "string",
                                "description": "Type of subAddress : it can be a subunit or a private street"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "GeographicSubAddressValue": "#/components/schemas/GeographicSubAddressValue"
                    }
                }
            },
            "GeographicSubAddressUnit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                        "type": "object",
                        "properties": {
                            "subUnitNumber": {
                                "type": "string",
                                "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                            },
                            "subUnitType": {
                                "type": "string",
                                "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                            }
                        }
                    }
                ]
            },
            "IntegerArrayCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Characteristic"
                    },
                    {
                        "description": "A characteristic which value is an array of Integer(s).",
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ]
            },
            "IntegerCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Characteristic"
                    },
                    {
                        "description": "A characteristic which value is a Integer.",
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "integer",
                                "description": "Value of the characteristic"
                            }
                        }
                    }
                ]
            },
            "NumberArrayCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Characteristic"
                    },
                    {
                        "description": "A characteristic which value is an array of Number(s).",
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                ]
            },
            "NumberCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Characteristic"
                    },
                    {
                        "description": "A characteristic which value is a Number.",
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number",
                                "description": "Value of the characteristic"
                            }
                        }
                    }
                ]
            },
            "ObjectArrayCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Characteristic"
                    },
                    {
                        "description": "A characteristic which value is an array of Object(s).",
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ]
            },
            "ObjectCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Characteristic"
                    },
                    {
                        "description": "A characteristic which value is a Object.",
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "object",
                                "description": "Value of the characteristic"
                            }
                        }
                    }
                ]
            },
            "PhoneContactMedium": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ContactMedium"
                    },
                    {
                        "type": "object",
                        "description": "Describes a phone number that could be used to contact a party (an individual or an organization)",
                        "properties": {
                            "phoneNumber": {
                                "type": "string",
                                "description": "The phone number of the contact"
                            }
                        }
                    }
                ]
            },
            "StringArrayCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Characteristic"
                    },
                    {
                        "description": "A characteristic which value is an array of String(s).",
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "StringCharacteristic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Characteristic"
                    },
                    {
                        "description": "A characteristic which value is a String.",
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "description": "Value of the characteristic"
                            }
                        }
                    }
                ]
            },
            "ProductRelationshipType": {
                "type": "string",
                "description": "Possible values for product relationship - This is informative information and implementation are free to use distinct.",
                "enum": [
                    "migratesTo",
                    "bundles",
                    "bundledBy",
                    "reliesOn",
                    "enables",
                    "requires",
                    "dependsOn",
                    "brings"
                ]
            },
            "Quote": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Entity"
                    },
                    {
                        "type": "object",
                        "description": "Quote can be used to negotiate service and product acquisition or modification between a customer and a service provider. Quote contain list of quote items, a reference to customer (partyRole), a list of productOffering and attached prices and conditions.",
                        "properties": {
                            "agreement": {
                                "type": "array",
                                "description": "A reference to an agreement defining the context of the quote",
                                "items": {
                                    "$ref": "#/components/schemas/AgreementRef"
                                }
                            },
                            "billingAccount": {
                                "type": "array",
                                "description": "A reference to a billing account to provide quote context information ",
                                "items": {
                                    "$ref": "#/components/schemas/BillingAccountRef"
                                }
                            },
                            "category": {
                                "type": "string",
                                "description": "Used to categorize the quote from a business perspective that can be useful for the CRM system (e.g. \"enterprise\", \"residential\", ...)"
                            },
                            "contactMedium": {
                                "type": "array",
                                "description": "Information contact related to the quote requester",
                                "items": {
                                    "$ref": "#/components/schemas/ContactMedium"
                                }
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of the quote"
                            },
                            "expectedFulfillmentStartDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "this is the date wished by the requester to have the requested quote item delivered"
                            },
                            "expectedQuoteCompletionDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "This is expected date - from quote supplier - to be able to send back  a response for this quote"
                            },
                            "externalId": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ExternalIdentifier"
                                }
                            },
                            "instantSyncQuote": {
                                "type": "boolean",
                                "description": "An indicator which when the value is \"true\" means that requester expects to get quoting result immediately in the response. If the indicator is true then the response code of 200 indicates the operation is successful otherwise a task is created with a response 201. "
                            },
                            "note": {
                                "type": "array",
                                "description": "Free form text associated with the quote",
                                "items": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            },
                            "authorization": {
                                "type": "array",
                                "description": "An authorization provided for the quote",
                                "items": {
                                    "$ref": "#/components/schemas/Authorization"
                                }
                            },
                            "quoteTotalPrice": {
                                "type": "array",
                                "description": "Quote total price",
                                "items": {
                                    "$ref": "#/components/schemas/QuotePrice"
                                }
                            },
                            "relatedParty": {
                                "type": "array",
                                "description": "A reference to a party playing a role in this quote (customer, seller, requester, etc.)",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedParty"
                                }
                            },
                            "productOfferingQualification": {
                                "type": "array",
                                "description": "A reference to a previously done product offering qualification",
                                "items": {
                                    "$ref": "#/components/schemas/ProductOfferingQualificationRef"
                                }
                            },
                            "requestedQuoteCompletionDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "This is requested date - from quote requester - to get a complete response for this quote"
                            },
                            "state": {
                                "$ref": "#/components/schemas/QuoteStateType"
                            },
                            "validFor": {
                                "$ref": "#/components/schemas/TimePeriod"
                            },
                            "version": {
                                "type": "string",
                                "description": "Quote version - if the customer rejected the quote but  negotiations still open a new version of the quote is managed"
                            },
                            "quoteItem": {
                                "type": "array",
                                "description": "A quote items describe an action to be performed on a productOffering or a product in order to get pricing elements and condition.",
                                "items": {
                                    "$ref": "#/components/schemas/QuoteItem"
                                },
                                "minItems": 1
                            },
                            "creationDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date and time when the quote was created"
                            },
                            "effectiveQuoteCompletionDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date when the quote has been completed"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "Quote": "#/components/schemas/Quote"
                    }
                }
            },
            "AgreementRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    }
                ]
            },
            "BillingAccountRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "BillingAccount reference. A BillingAccount is a detailed description of a bill structure.",
                        "type": "object",
                        "properties": {
                            "ratingType": {
                                "type": "string",
                                "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                            }
                        }
                    }
                ]
            },
            "ExternalIdentifier": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list.",
                        "type": "object",
                        "properties": {
                            "owner": {
                                "type": "string",
                                "description": "Name of the external system that owns the entity.",
                                "example": "MagentoCommerce"
                            },
                            "externalIdentifierType": {
                                "type": "string",
                                "description": "Type of the identification, typically would be the type of the entity within the external system",
                                "example": "ProductOrder"
                            },
                            "id": {
                                "type": "string",
                                "description": "identification of the entity within the external system."
                            }
                        }
                    }
                ]
            },
            "Note": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Extra information about a given entity",
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "string",
                                "description": "Author of the note",
                                "example": "Mr. N. Bene"
                            },
                            "date": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date of the note",
                                "example": "2020-11-20T08:00:00Z"
                            },
                            "id": {
                                "type": "string",
                                "description": "Identifier of the note within its containing entity"
                            },
                            "text": {
                                "type": "string",
                                "description": "Text of the note"
                            }
                        }
                    }
                ]
            },
            "Authorization": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "If special discount or special product offering price or specific condition need an approval for ISP sale representative it is described here.",
                        "type": "object",
                        "properties": {
                            "givenDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date when the authorization (approved or declined) was done"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the required authorization"
                            },
                            "requestedDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date when the authorization is requested for"
                            },
                            "signatureRepresentation": {
                                "type": "string",
                                "description": "To describe a digital or manual signature"
                            },
                            "state": {
                                "type": "string",
                                "description": "State of the authorization, such as: approved or declined"
                            },
                            "approver": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedParty"
                                }
                            }
                        }
                    }
                ]
            },
            "QuotePrice": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Description of price and discount awarded",
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string",
                                "description": "Description of the quote/quote item price"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the quote /quote item price"
                            },
                            "productOfferingPrice": {
                                "$ref": "#/components/schemas/ProductOfferingPriceRef"
                            },
                            "recurringChargePeriod": {
                                "type": "string",
                                "description": "Used for recurring charge to indicate period (month, week, etc..)"
                            },
                            "unitOfMeasure": {
                                "type": "string",
                                "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..)"
                            },
                            "price": {
                                "$ref": "#/components/schemas/Price"
                            },
                            "priceAlteration": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PriceAlteration"
                                }
                            },
                            "priceType": {
                                "type": "string",
                                "description": "indicate if the price is for recurrent or no-recurrent charge"
                            }
                        }
                    }
                ]
            },
            "RelatedParty": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
                        "type": "object",
                        "properties": {
                            "role": {
                                "type": "string",
                                "description": "Role played by the related party"
                            },
                            "@referredType": {
                                "type": "string",
                                "description": "The actual type of the target instance when needed for disambiguation."
                            }
                        }
                    }
                ]
            },
            "ProductOfferingQualificationRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    }
                ]
            },
            "QuoteStateType": {
                "type": "string",
                "description": "Possible values for the state of the quote",
                "enum": [
                    "acknowledged",
                    "rejected",
                    "pending",
                    "inProgress",
                    "cancelled",
                    "approved",
                    "accepted",
                    "declined"
                ]
            },
            "QuoteItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "type": "object",
                        "description": "A quote items describe an action to be performed on a productOffering or a product in order to get pricing elements and condition.",
                        "properties": {
                            "action": {
                                "$ref": "#/components/schemas/ItemActionType"
                            },
                            "appointment": {
                                "type": "array",
                                "description": "A reference to appointment(s) associated with this quote item",
                                "items": {
                                    "$ref": "#/components/schemas/AppointmentRef"
                                }
                            },
                            "attachment": {
                                "type": "array",
                                "description": "A reference to attachment(s) associated with this quote item",
                                "items": {
                                    "$ref": "#/components/schemas/AttachmentRefOrValue"
                                }
                            },
                            "note": {
                                "type": "array",
                                "description": "Free form text associated with the quote item",
                                "items": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            },
                            "product": {
                                "$ref": "#/components/schemas/ProductRefOrValue"
                            },
                            "productOffering": {
                                "$ref": "#/components/schemas/ProductOfferingRef"
                            },
                            "quantity": {
                                "type": "integer",
                                "description": "Quantity asked for this quote item"
                            },
                            "quoteItem": {
                                "type": "array",
                                "description": "A structure to embedded quote item within quote item",
                                "items": {
                                    "$ref": "#/components/schemas/QuoteItem"
                                }
                            },
                            "quoteItemAuthorization": {
                                "type": "array",
                                "description": "Authorization related to this quote item",
                                "items": {
                                    "$ref": "#/components/schemas/Authorization"
                                }
                            },
                            "quoteItemPrice": {
                                "type": "array",
                                "description": "Price for this quote item",
                                "items": {
                                    "$ref": "#/components/schemas/QuotePrice"
                                }
                            },
                            "quoteItemRelationship": {
                                "type": "array",
                                "description": "A relationship from item within a quote",
                                "items": {
                                    "$ref": "#/components/schemas/QuoteItemRelationship"
                                }
                            },
                            "productOfferingQualificationItem": {
                                "$ref": "#/components/schemas/ProductOfferingQualificationItemRef"
                            },
                            "state": {
                                "$ref": "#/components/schemas/QuoteStateType"
                            },
                            "relatedParty": {
                                "type": "array",
                                "description": "A reference to a party playing a role in this quote item",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedParty"
                                }
                            },
                            "id": {
                                "type": "string",
                                "description": "Identifier of the quote item (generally it is a sequence number 01, 02, 03, ...)"
                            }
                        }
                    }
                ]
            },
            "EntityRef": {
                "description": "Entity reference schema to be use for all entityRef class.",
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "description": "Hyperlink reference"
                    }
                }
            },
            "ProductOfferingPriceRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    }
                ]
            },
            "Price": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Provides all amounts (tax included, duty free, tax rate), used currency and percentage to apply for Price and Price Alteration.",
                        "type": "object",
                        "properties": {
                            "dutyFreeAmount": {
                                "$ref": "#/components/schemas/Money"
                            },
                            "percentage": {
                                "type": "number",
                                "format": "float",
                                "description": "Percentage to apply for ProdOfferPriceAlteration"
                            },
                            "taxIncludedAmount": {
                                "$ref": "#/components/schemas/Money"
                            },
                            "taxRate": {
                                "type": "number",
                                "format": "float",
                                "description": "Tax rate"
                            }
                        }
                    }
                ]
            },
            "PriceAlteration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Is an amount, usually of money, that modifies the price charged for an order item.",
                        "type": "object",
                        "properties": {
                            "applicationDuration": {
                                "type": "integer",
                                "description": "Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)"
                            },
                            "description": {
                                "type": "string",
                                "description": "A narrative that explains in detail the semantics of this order item price alteration"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the order item price alteration"
                            },
                            "productOfferingPrice": {
                                "$ref": "#/components/schemas/ProductOfferingPriceRef"
                            },
                            "priceType": {
                                "type": "string",
                                "description": "A category that describes the price such as recurring, one time and usage."
                            },
                            "priority": {
                                "type": "integer",
                                "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                            },
                            "recurringChargePeriod": {
                                "type": "string",
                                "description": "Could be month, week..."
                            },
                            "unitOfMeasure": {
                                "type": "string",
                                "description": "Could be minutes, GB..."
                            },
                            "price": {
                                "$ref": "#/components/schemas/Price"
                            }
                        }
                    }
                ]
            },
            "ItemActionType": {
                "description": "action to be performed on the entity managed by the item",
                "type": "string",
                "enum": [
                    "add",
                    "modify",
                    "delete",
                    "noChange"
                ]
            },
            "AppointmentRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Refers an appointment, such as a Customer presentation or internal meeting or site visit",
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string",
                                "description": "An explanatory text regarding the appointment made with a party"
                            }
                        }
                    }
                ]
            },
            "AttachmentRefOrValue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Extensible"
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "AttachmentRefOrValue": "#/components/schemas/AttachmentRefOrValue",
                        "AttachmentRef": "#/components/schemas/AttachmentRef",
                        "Attachment": "#/components/schemas/Attachment"
                    }
                }
            },
            "ProductRefOrValue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Extensible"
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "ProductRefOrValue": "#/components/schemas/ProductRefOrValue",
                        "ProductRef": "#/components/schemas/ProductRef",
                        "ProductValue": "#/components/schemas/ProductValue"
                    }
                }
            },
            "ProductOfferingRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    }
                ]
            },
            "QuoteItemRelationship": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Used to describe relationship between quote item. These relationship could have an impact on pricing and conditions",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Id of the related quote item (must be in the same quote)"
                            },
                            "relationshipType": {
                                "type": "string",
                                "description": "Relationship type as relies on, bundles, etc..."
                            }
                        }
                    }
                ]
            },
            "ProductOfferingQualificationItemRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "type": "object",
                        "description": "It's a productOfferingQualification item that has been executed previously.",
                        "properties": {
                            "productOfferingQualificationName": {
                                "type": "string",
                                "description": "Name of the related entity."
                            },
                            "productOfferingQualificationHref": {
                                "type": "string",
                                "description": "Reference of the related entity."
                            },
                            "@referredType": {
                                "type": "string",
                                "description": "The actual type of the target instance when needed for disambiguation."
                            },
                            "productOfferingQualificationId": {
                                "type": "string",
                                "description": "Unique identifier of a related entity."
                            },
                            "itemId": {
                                "type": "string",
                                "description": "Id of an item of a product offering qualification"
                            }
                        }
                    }
                ]
            },
            "GcQuoteStateType": {
                "type": "string",
                "description": "Possible values for the state of the quote",
                "enum": [
                    "acknowledged",
                    "rejected",
                    "inProgress",
                    "cancelled",
                    "approved",
                    "accepted",
                    "declined"
                ]
            },
            "Entity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Addressable"
                    },
                    {
                        "$ref": "#/components/schemas/Extensible"
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "Entity": "#/components/schemas/Entity"
                    }
                }
            },
            "Reference": {
                "description": "Reference schema .",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Identifier of the referred entity."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the referred entity."
                    },
                    "@referredType": {
                        "type": "string",
                        "description": "The actual type of the target instance when needed for disambiguation."
                    }
                }
            },
            "Money": {
                "description": "A base / value business entity used to represent money",
                "type": "object",
                "properties": {
                    "unit": {
                        "type": "string",
                        "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type"
                    }
                }
            },
            "AttachmentRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AttachmentRefOrValue"
                    },
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures",
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string",
                                "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                                "description": "Link to the attachment media/content",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Attachment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AttachmentRefOrValue"
                    },
                    {
                        "$ref": "#/components/schemas/Entity"
                    },
                    {
                        "description": "Complements the description of an element (for instance a product) through video, pictures...",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the attachment"
                            },
                            "description": {
                                "type": "string",
                                "description": "A narrative text describing the content of the attachment",
                                "example": "Photograph of the Product"
                            },
                            "url": {
                                "type": "string",
                                "description": "Uniform Resource Locator, is a web page address (a subset of URI)",
                                "example": "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
                            },
                            "content": {
                                "type": "string",
                                "format": "base64",
                                "description": "The actual contents of the attachment object, if embedded, encoded as base64"
                            },
                            "size": {
                                "$ref": "#/components/schemas/Quantity"
                            },
                            "validFor": {
                                "$ref": "#/components/schemas/TimePeriod"
                            },
                            "attachmentType": {
                                "type": "string",
                                "description": "Attachment type such as video, picture"
                            },
                            "mimeType": {
                                "type": "string",
                                "description": "Attachment mime type such as extension file for video, picture and document"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "Attachment": "#/components/schemas/Attachment"
                    }
                }
            },
            "ProductRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProductRefOrValue"
                    },
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    }
                ]
            },
            "ProductValue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProductRefOrValue"
                    },
                    {
                        "$ref": "#/components/schemas/Extensible"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "type": "object",
                        "description": "A product offering procured by a customer or other interested party playing a party role. A product is realized as one or more service(s) and / or resource(s).",
                        "properties": {
                            "href": {
                                "type": "string",
                                "description": "Hyperlink reference"
                            },
                            "id": {
                                "type": "string",
                                "description": "unique identifier"
                            },
                            "agreementItem": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AgreementItemRef"
                                }
                            },
                            "billingAccount": {
                                "$ref": "#/components/schemas/BillingAccountRef"
                            },
                            "creationDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date and time when the product was created"
                            },
                            "description": {
                                "type": "string",
                                "description": "Is the description of the product. It could be copied from the description of the Product Offering."
                            },
                            "isBundle": {
                                "type": "boolean",
                                "description": "If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering."
                            },
                            "isCustomerVisible": {
                                "type": "boolean",
                                "description": "If true, the product is visible by the customer."
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the product. It could be the same as the name of the product offering"
                            },
                            "orderDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Is the date when the product was ordered"
                            },
                            "productCharacteristic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Characteristic"
                                }
                            },
                            "productOffering": {
                                "$ref": "#/components/schemas/ProductOfferingRef"
                            },
                            "productOrderItem": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedOrderItem"
                                }
                            },
                            "product": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProductRefOrValue"
                                }
                            },
                            "productPrice": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProductPrice"
                                }
                            },
                            "productRelationship": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProductRelationship"
                                }
                            },
                            "productSerialNumber": {
                                "type": "string",
                                "description": "Is the serial number for the product. This is typically applicable to tangible products e.g. Broadband Router."
                            },
                            "productSpecification": {
                                "$ref": "#/components/schemas/ProductSpecificationRef"
                            },
                            "productTerm": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProductTerm"
                                }
                            },
                            "realizingResource": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ResourceRef"
                                }
                            },
                            "realizingService": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ServiceRef"
                                }
                            },
                            "relatedParty": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedParty"
                                }
                            },
                            "place": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedPlaceRefOrValue"
                                }
                            },
                            "startDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Is the date from which the product starts"
                            },
                            "status": {
                                "$ref": "#/components/schemas/ProductStatusType"
                            },
                            "terminationDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Is the date when the product was terminated"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "ProductValue": "#/components/schemas/ProductValue"
                    }
                }
            },
            "GcItemActionType": {
                "description": "action to be performed on the entity managed by the item",
                "type": "string",
                "enum": [
                    "add",
                    "modify",
                    "delete"
                ]
            },
            "Addressable": {
                "type": "object",
                "description": "Base schema for adressable entities",
                "properties": {
                    "href": {
                        "type": "string",
                        "description": "Hyperlink reference"
                    },
                    "id": {
                        "type": "string",
                        "description": "unique identifier"
                    }
                }
            },
            "Quantity": {
                "type": "object",
                "description": "An amount in a given unit",
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "default": 1,
                        "description": "Numeric value in a given unit"
                    },
                    "units": {
                        "type": "string",
                        "description": "Unit"
                    }
                }
            },
            "AgreementItemRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "type": "object",
                        "description": "It's a Agreement item that has been executed previously.",
                        "properties": {
                            "agreementName": {
                                "type": "string",
                                "description": "Name of the related entity."
                            },
                            "agreementHref": {
                                "type": "string",
                                "description": "Reference of the related entity."
                            },
                            "@referredType": {
                                "type": "string",
                                "description": "The actual type of the target instance when needed for disambiguation."
                            },
                            "agreementId": {
                                "type": "string",
                                "description": "Unique identifier of a related entity."
                            },
                            "agreementItemId": {
                                "type": "string",
                                "description": "Id of an item of a Agreement"
                            }
                        }
                    }
                ]
            },
            "RelatedOrderItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "type": "object",
                        "description": "It's a Order item that has been executed previously.",
                        "properties": {
                            "orderItemAction": {
                                "$ref": "#/components/schemas/ItemActionType"
                            },
                            "orderHref": {
                                "type": "string",
                                "description": "Reference of the related entity."
                            },
                            "@referredType": {
                                "type": "string",
                                "description": "The actual type of the target instance when needed for disambiguation."
                            },
                            "role": {
                                "type": "string",
                                "description": "Role played by the  Order"
                            },
                            "orderId": {
                                "type": "string",
                                "description": "Unique identifier of a related  Order."
                            },
                            "orderItemId": {
                                "type": "string",
                                "description": "Id of an item of a prduct order"
                            }
                        }
                    }
                ]
            },
            "ProductPrice": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Extensible"
                    },
                    {
                        "description": "Description of price and discount awarded",
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string",
                                "description": "Description of the Product price"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the Product price"
                            },
                            "productOfferingPrice": {
                                "$ref": "#/components/schemas/ProductOfferingPriceRef"
                            },
                            "recurringChargePeriod": {
                                "type": "string",
                                "description": "Used for recurring charge to indicate period (month, week, etc..)."
                            },
                            "unitOfMeasure": {
                                "type": "string",
                                "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..)"
                            },
                            "price": {
                                "$ref": "#/components/schemas/Price"
                            },
                            "priceAlteration": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PriceAlteration"
                                }
                            },
                            "priceType": {
                                "type": "string",
                                "description": "indicate if the price is for recurrent or no-recurrent charge"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "ProductPrice": "#/components/schemas/ProductPrice"
                    }
                }
            },
            "ProductRelationship": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Used to describe relationship between product.",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Id of the related product"
                            },
                            "relationshipType": {
                                "type": "string",
                                "description": "Relationship type as relies on, bundles, etc..."
                            }
                        }
                    }
                ]
            },
            "ProductSpecificationRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    }
                ]
            },
            "ProductTerm": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "description": "Description of a productTerm linked to this product. This represent a commitment with a duration",
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string",
                                "description": "Description of the productTerm"
                            },
                            "duration": {
                                "$ref": "#/components/schemas/Duration"
                            },
                            "validFor": {
                                "$ref": "#/components/schemas/TimePeriod"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the productTerm",
                                "example": "12months commitment"
                            }
                        }
                    }
                ]
            },
            "ResourceRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    }
                ]
            },
            "ServiceRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    }
                ]
            },
            "RelatedPlaceRefOrValue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Extensible"
                    },
                    {
                        "description": "Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself",
                        "type": "object",
                        "properties": {
                            "role": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "RelatedPlaceRefOrValue": "#/components/schemas/RelatedPlaceRefOrValue",
                        "PlaceRef": "#/components/schemas/PlaceRef",
                        "GeographicAddressValue": "#/components/schemas/GeographicAddressValue",
                        "GeographicLocationValue": "#/components/schemas/GeographicLocationValue"
                    }
                }
            },
            "ProductStatusType": {
                "type": "string",
                "description": "Possible values for the status of the product",
                "enum": [
                    "created",
                    "pendingActive",
                    "cancelled",
                    "active",
                    "pendingTerminate",
                    "terminated",
                    "suspended",
                    "aborted "
                ]
            },
            "Duration": {
                "type": "object",
                "description": "A time interval in a given unit of time",
                "properties": {
                    "amount": {
                        "type": "integer",
                        "description": "Time interval (number of seconds, minutes, hours, etc.)"
                    },
                    "units": {
                        "type": "string",
                        "description": "Unit of time (seconds, minutes, hours, etc.)"
                    }
                }
            },
            "PlaceRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RelatedPlaceRefOrValue"
                    },
                    {
                        "$ref": "#/components/schemas/Reference"
                    },
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    }
                ]
            },
            "GeographicLocationValue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RelatedPlaceRefOrValue"
                    },
                    {
                        "$ref": "#/components/schemas/Extensible"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "type": "object",
                        "description": "A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of Point (addresses and locations), MultiPoint, LineString (streets, highways and boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the @type attribute to specify which of these is being specified by the geometry attribute.",
                        "properties": {
                            "bbox": {
                                "type": "array",
                                "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                                "items": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "GeographicLocationValue": "#/components/schemas/GeographicLocationValue"
                    }
                }
            },
            "QuoteAttributeValueChangeEvent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Event"
                    },
                    {
                        "description": "QuoteAttributeValueChange structure",
                        "type": "object",
                        "properties": {
                            "event": {
                                "$ref": "#/components/schemas/QuoteAttributeValueChange"
                            }
                        }
                    }
                ]
            },
            "QuoteAttributeValueChange": {
                "description": "QuoteAttributeValueChange generic structure",
                "type": "object",
                "properties": {
                    "quote": {
                        "$ref": "#/components/schemas/QuoteValue"
                    }
                }
            },
            "Event": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Entity"
                    },
                    {
                        "description": "event with common attributes.",
                        "type": "object",
                        "properties": {
                            "correlationId": {
                                "type": "string",
                                "description": "The correlation id for this event."
                            },
                            "domain": {
                                "type": "string",
                                "description": "The domain of the event."
                            },
                            "title": {
                                "type": "string",
                                "description": "The title of the event."
                            },
                            "description": {
                                "type": "string",
                                "description": "An explnatory of the event."
                            },
                            "priority": {
                                "type": "string",
                                "description": "A priority."
                            },
                            "timeOccurred": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the event occurred."
                            },
                            "source": {
                                "$ref": "#/components/schemas/TmfEntityRef"
                            },
                            "reportingSystem": {
                                "$ref": "#/components/schemas/TmfEntityRef"
                            },
                            "relatedParty": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedParty"
                                }
                            },
                            "analyticCharacteristic": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Characteristic"
                                }
                            },
                            "eventId": {
                                "type": "string",
                                "description": "The identifier of the notification."
                            },
                            "eventTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time of the event occurrence."
                            },
                            "eventType": {
                                "type": "string",
                                "description": "The type of the notification."
                            },
                            "event": {
                                "description": "The event linked to the involved resource object",
                                "type": "object"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "Event": "#/components/schemas/Event",
                        "QuoteStateChangeEvent": "#/components/schemas/QuoteStateChangeEvent",
                        "QuoteInformationRequiredEvent": "#/components/schemas/QuoteInformationRequiredEvent",
                        "QuoteDeleteEvent": "#/components/schemas/QuoteDeleteEvent",
                        "QuoteCreateEvent": "#/components/schemas/QuoteCreateEvent",
                        "QuoteAttributeValueChangeEvent": "#/components/schemas/QuoteAttributeValueChangeEvent"
                    }
                }
            },
            "QuoteValue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Entity"
                    },
                    {
                        "type": "object",
                        "description": "Quote can be used to negotiate service and product acquisition or modification between a customer and a service provider. Quote contain list of quote items, a reference to customer (partyRole), a list of productOffering and attached prices and conditions.",
                        "properties": {
                            "agreement": {
                                "type": "array",
                                "description": "A reference to an agreement defining the context of the quote",
                                "items": {
                                    "$ref": "#/components/schemas/AgreementRef"
                                }
                            },
                            "billingAccount": {
                                "type": "array",
                                "description": "A reference to a billing account to provide quote context information ",
                                "items": {
                                    "$ref": "#/components/schemas/BillingAccountRef"
                                }
                            },
                            "category": {
                                "type": "string",
                                "description": "Used to categorize the quote from a business perspective that can be useful for the CRM system (e.g. \"enterprise\", \"residential\", ...)"
                            },
                            "contactMedium": {
                                "type": "array",
                                "description": "Information contact related to the quote requester",
                                "items": {
                                    "$ref": "#/components/schemas/ContactMedium"
                                }
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of the quote"
                            },
                            "expectedFulfillmentStartDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "this is the date wished by the requester to have the requested quote item delivered"
                            },
                            "expectedQuoteCompletionDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "This is expected date - from quote supplier - to be able to send back  a response for this quote"
                            },
                            "externalId": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ExternalIdentifier"
                                }
                            },
                            "instantSyncQuote": {
                                "type": "boolean",
                                "description": "An indicator which when the value is \"true\" means that requester expects to get quoting result immediately in the response. If the indicator is true then the response code of 200 indicates the operation is successful otherwise a task is created with a response 201. "
                            },
                            "note": {
                                "type": "array",
                                "description": "Free form text associated with the quote",
                                "items": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            },
                            "effectiveQuoteCompletionDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date when the quote has been completed"
                            },
                            "creationDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date and time when the quote was created"
                            },
                            "authorization": {
                                "type": "array",
                                "description": "An authorization provided for the quote",
                                "items": {
                                    "$ref": "#/components/schemas/Authorization"
                                }
                            },
                            "quoteTotalPrice": {
                                "type": "array",
                                "description": "Quote total price",
                                "items": {
                                    "$ref": "#/components/schemas/QuotePrice"
                                }
                            },
                            "relatedParty": {
                                "type": "array",
                                "description": "A reference to a party playing a role in this quote (customer, seller, requester, etc.)",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedParty"
                                }
                            },
                            "productOfferingQualification": {
                                "type": "array",
                                "description": "A reference to a previously done product offering qualification",
                                "items": {
                                    "$ref": "#/components/schemas/ProductOfferingQualificationRef"
                                }
                            },
                            "requestedQuoteCompletionDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "This is requested date - from quote requester - to get a complete response for this quote"
                            },
                            "state": {
                                "$ref": "#/components/schemas/QuoteStateType"
                            },
                            "validFor": {
                                "$ref": "#/components/schemas/TimePeriod"
                            },
                            "version": {
                                "type": "string",
                                "description": "Quote version - if the customer rejected the quote but  negotiations still open a new version of the quote is managed"
                            },
                            "quoteItem": {
                                "type": "array",
                                "description": "A quote items describe an action to be performed on a productOffering or a product in order to get pricing elements and condition.",
                                "items": {
                                    "$ref": "#/components/schemas/QuoteItem"
                                },
                                "minItems": 1
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "QuoteValue": "#/components/schemas/QuoteValue"
                    }
                }
            },
            "TmfEntityRef": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EntityRef"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaContext"
                    },
                    {
                        "$ref": "#/components/schemas/Reference"
                    }
                ]
            },
            "QuoteCreateEvent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Event"
                    },
                    {
                        "description": "QuoteCreateEvent generic structure",
                        "type": "object",
                        "properties": {
                            "event": {
                                "$ref": "#/components/schemas/QuoteCreate"
                            }
                        }
                    }
                ]
            },
            "QuoteCreate": {
                "description": "QuoteCreate",
                "type": "object",
                "properties": {
                    "quote": {
                        "$ref": "#/components/schemas/Quote"
                    }
                }
            },
            "QuoteDeleteEvent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Event"
                    },
                    {
                        "description": "QuoteDeleteEvent generic structure",
                        "type": "object",
                        "properties": {
                            "event": {
                                "$ref": "#/components/schemas/QuoteDelete"
                            }
                        }
                    }
                ]
            },
            "QuoteDelete": {
                "description": "Quote Delete",
                "type": "object",
                "properties": {
                    "quote": {
                        "$ref": "#/components/schemas/DeleteEvent"
                    }
                }
            },
            "DeleteEvent": {
                "description": "DeleteEvent generic structure",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Identifier of the resource"
                    },
                    "href": {
                        "type": "string",
                        "description": "hyperlink to the resource"
                    }
                }
            },
            "QuoteInformationRequiredEvent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Event"
                    },
                    {
                        "description": "QuoteInformationRequiredEvent generic structure",
                        "type": "object",
                        "properties": {
                            "event": {
                                "$ref": "#/components/schemas/QuoteInformationRequired"
                            }
                        }
                    }
                ]
            },
            "QuoteInformationRequired": {
                "description": "QuoteInformationRequired generic structure",
                "type": "object",
                "properties": {
                    "quote": {
                        "$ref": "#/components/schemas/InformationRequiredEvent"
                    }
                }
            },
            "InformationRequiredEvent": {
                "description": "InformationRequiredEvent generic structure",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "unique identifier of the resource"
                    },
                    "href": {
                        "type": "string",
                        "description": "hyperlink reference to the resource"
                    },
                    "@type": {
                        "type": "string",
                        "description": "When sub-classing, this defines the sub-class Extensible name"
                    },
                    "informationRequiredPath": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Path"
                        },
                        "minItems": 1
                    }
                }
            },
            "Path": {
                "description": "Path  structure",
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "description": "path to an attribute in an api payload"
                    }
                }
            },
            "QuoteStateChangeEvent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Event"
                    },
                    {
                        "description": "QuoteStateChangeEvent generic structure",
                        "type": "object",
                        "properties": {
                            "event": {
                                "$ref": "#/components/schemas/QuoteStateChange"
                            }
                        }
                    }
                ]
            },
            "QuoteStateChange": {
                "description": "QuoteStateChange generic structure",
                "type": "object",
                "properties": {
                    "quote": {
                        "$ref": "#/components/schemas/StateChangeEvent"
                    }
                }
            },
            "StateChangeEvent": {
                "description": "StateChangeEvent generic structure",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "unique identifier of the resource"
                    },
                    "href": {
                        "type": "string",
                        "description": "hyperlink reference to the resource"
                    },
                    "@type": {
                        "type": "string",
                        "description": "When sub-classing, this defines the sub-class Extensible name"
                    },
                    "state": {
                        "type": "string",
                        "description": "state of the resource"
                    },
                    "itemStateChange": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemStateChange"
                        },
                        "minItems": 0
                    }
                }
            },
            "ItemStateChange": {
                "description": "ItemStateChange generic structure",
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "string",
                        "description": "identifier of the item"
                    },
                    "state": {
                        "type": "string",
                        "description": "state of the item"
                    }
                }
            },
            "Error": {
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "Error": "#/components/schemas/Error"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Extensible"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string",
                                "description": "Application relevant detail, defined in the API or a common list."
                            },
                            "reason": {
                                "type": "string",
                                "description": "Explanation of the reason for the error which can be shown to a client user."
                            },
                            "message": {
                                "type": "string",
                                "description": "More details and corrective actions related to the error which can be shown to a client user."
                            },
                            "status": {
                                "type": "string",
                                "description": "HTTP Error code extension"
                            },
                            "referenceError": {
                                "type": "string",
                                "description": "URI of documentation describing the error."
                            }
                        }
                    }
                ],
                "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)"
            },
            "EventSubscriptionInput": {
                "type": "object",
                "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
                "properties": {
                    "callback": {
                        "type": "string",
                        "description": "The callback being registered."
                    },
                    "query": {
                        "type": "string",
                        "description": "additional data to be passed"
                    }
                }
            },
            "EventSubscription": {
                "type": "object",
                "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the listener"
                    },
                    "callback": {
                        "type": "string",
                        "description": "The callback being registered."
                    },
                    "query": {
                        "type": "string",
                        "description": "additional data to be passed"
                    }
                }
            },
            "JsonPatch": {
                "description": "A JSONPatch document as defined by RFC 6902",
                "properties": {
                    "op": {
                        "type": "string",
                        "description": "The operation to be performed",
                        "enum": [
                            "add",
                            "remove",
                            "replace",
                            "move",
                            "copy",
                            "test"
                        ]
                    },
                    "path": {
                        "type": "string",
                        "description": "A JSON-Pointer"
                    },
                    "value": {
                        "type": "object",
                        "description": "The value to be used within the operations."
                    },
                    "from": {
                        "type": "string",
                        "description": "A string containing a JSON Pointer value."
                    }
                }
            },
            "Quote_LVO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Extensible"
                    },
                    {
                        "type": "object",
                        "description": "Quote can be used to negotiate service and product acquisition or modification between a customer and a service provider. Quote contain list of quote items, a reference to customer (partyRole), a list of productOffering and attached prices and conditions.",
                        "properties": {
                            "agreement": {
                                "type": "array",
                                "description": "A reference to an agreement defining the context of the quote",
                                "items": {
                                    "$ref": "#/components/schemas/AgreementRef"
                                }
                            },
                            "billingAccount": {
                                "type": "array",
                                "description": "A reference to a billing account to provide quote context information ",
                                "items": {
                                    "$ref": "#/components/schemas/BillingAccountRef"
                                }
                            },
                            "category": {
                                "type": "string",
                                "description": "Used to categorize the quote from a business perspective that can be useful for the CRM system (e.g. \"enterprise\", \"residential\", ...)"
                            },
                            "contactMedium": {
                                "type": "array",
                                "description": "Information contact related to the quote requester",
                                "items": {
                                    "$ref": "#/components/schemas/ContactMedium"
                                }
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of the quote"
                            },
                            "expectedFulfillmentStartDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "this is the date wished by the requester to have the requested quote item delivered"
                            },
                            "externalId": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ExternalIdentifier"
                                }
                            },
                            "instantSyncQuote": {
                                "type": "boolean",
                                "description": "An indicator which when the value is \"true\" means that requester expects to get quoting result immediately in the response. If the indicator is true then the response code of 200 indicates the operation is successful otherwise a task is created with a response 201. "
                            },
                            "note": {
                                "type": "array",
                                "description": "Free form text associated with the quote",
                                "items": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            },
                            "authorization": {
                                "type": "array",
                                "description": "An authorization provided for the quote",
                                "items": {
                                    "$ref": "#/components/schemas/Authorization"
                                }
                            },
                            "relatedParty": {
                                "type": "array",
                                "description": "A reference to a party playing a role in this quote (customer, seller, requester, etc.)",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedParty"
                                }
                            },
                            "productOfferingQualification": {
                                "type": "array",
                                "description": "A reference to a previously done product offering qualification",
                                "items": {
                                    "$ref": "#/components/schemas/ProductOfferingQualificationRef"
                                }
                            },
                            "requestedQuoteCompletionDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "This is requested date - from quote requester - to get a complete response for this quote"
                            },
                            "version": {
                                "type": "string",
                                "description": "Quote version - if the customer rejected the quote but  negotiations still open a new version of the quote is managed"
                            },
                            "quoteItem": {
                                "type": "array",
                                "description": "A quote items describe an action to be performed on a productOffering or a product in order to get pricing elements and condition.",
                                "items": {
                                    "$ref": "#/components/schemas/QuoteItem"
                                },
                                "minItems": 1
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "Quote": "#/components/schemas/Quote_Create"
                    }
                }
            },
            "Quote_UVO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Extensible"
                    },
                    {
                        "type": "object",
                        "description": "Quote can be used to negotiate service and product acquisition or modification between a customer and a service provider. Quote contain list of quote items, a reference to customer (partyRole), a list of productOffering and attached prices and conditions.",
                        "properties": {
                            "agreement": {
                                "type": "array",
                                "description": "A reference to an agreement defining the context of the quote",
                                "items": {
                                    "$ref": "#/components/schemas/AgreementRef"
                                }
                            },
                            "billingAccount": {
                                "type": "array",
                                "description": "A reference to a billing account to provide quote context information ",
                                "items": {
                                    "$ref": "#/components/schemas/BillingAccountRef"
                                }
                            },
                            "category": {
                                "type": "string",
                                "description": "Used to categorize the quote from a business perspective that can be useful for the CRM system (e.g. \"enterprise\", \"residential\", ...)"
                            },
                            "contactMedium": {
                                "type": "array",
                                "description": "Information contact related to the quote requester",
                                "items": {
                                    "$ref": "#/components/schemas/ContactMedium"
                                }
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of the quote"
                            },
                            "expectedFulfillmentStartDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "this is the date wished by the requester to have the requested quote item delivered"
                            },
                            "expectedQuoteCompletionDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "This is expected date - from quote supplier - to be able to send back  a response for this quote"
                            },
                            "externalId": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ExternalIdentifier"
                                }
                            },
                            "instantSyncQuote": {
                                "type": "boolean",
                                "description": "An indicator which when the value is \"true\" means that requester expects to get quoting result immediately in the response. If the indicator is true then the response code of 200 indicates the operation is successful otherwise a task is created with a response 201. "
                            },
                            "note": {
                                "type": "array",
                                "description": "Free form text associated with the quote",
                                "items": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            },
                            "authorization": {
                                "type": "array",
                                "description": "An authorization provided for the quote",
                                "items": {
                                    "$ref": "#/components/schemas/Authorization"
                                }
                            },
                            "quoteTotalPrice": {
                                "type": "array",
                                "description": "Quote total price",
                                "items": {
                                    "$ref": "#/components/schemas/QuotePrice"
                                }
                            },
                            "relatedParty": {
                                "type": "array",
                                "description": "A reference to a party playing a role in this quote (customer, seller, requester, etc.)",
                                "items": {
                                    "$ref": "#/components/schemas/RelatedParty"
                                }
                            },
                            "productOfferingQualification": {
                                "type": "array",
                                "description": "A reference to a previously done product offering qualification",
                                "items": {
                                    "$ref": "#/components/schemas/ProductOfferingQualificationRef"
                                }
                            },
                            "requestedQuoteCompletionDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "This is requested date - from quote requester - to get a complete response for this quote"
                            },
                            "state": {
                                "$ref": "#/components/schemas/QuoteStateType"
                            },
                            "validFor": {
                                "$ref": "#/components/schemas/TimePeriod"
                            },
                            "version": {
                                "type": "string",
                                "description": "Quote version - if the customer rejected the quote but  negotiations still open a new version of the quote is managed"
                            },
                            "quoteItem": {
                                "type": "array",
                                "description": "A quote items describe an action to be performed on a productOffering or a product in order to get pricing elements and condition.",
                                "items": {
                                    "$ref": "#/components/schemas/QuoteItem"
                                },
                                "minItems": 1
                            },
                            "effectiveQuoteCompletionDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date when the quote has been completed"
                            }
                        }
                    }
                ],
                "discriminator": {
                    "propertyName": "@type",
                    "mapping": {
                        "Quote": "#/components/schemas/Quote_Update"
                    }
                }
            },
            "QuoteCreateEvent_LVO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Event"
                    },
                    {
                        "description": "QuoteCreateEvent generic structure",
                        "type": "object",
                        "properties": {
                            "event": {
                                "$ref": "#/components/schemas/QuoteCreate"
                            }
                        }
                    }
                ]
            },
            "QuoteStateChangeEvent_LVO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Event"
                    },
                    {
                        "description": "QuoteStateChangeEvent generic structure",
                        "type": "object",
                        "properties": {
                            "event": {
                                "$ref": "#/components/schemas/QuoteStateChange"
                            }
                        }
                    }
                ]
            },
            "QuoteDeleteEvent_LVO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Event"
                    },
                    {
                        "description": "QuoteDeleteEvent generic structure",
                        "type": "object",
                        "properties": {
                            "event": {
                                "$ref": "#/components/schemas/QuoteDelete"
                            }
                        }
                    }
                ]
            },
            "QuoteInformationRequiredEvent_LVO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Event"
                    },
                    {
                        "description": "QuoteInformationRequiredEvent generic structure",
                        "type": "object",
                        "properties": {
                            "event": {
                                "$ref": "#/components/schemas/QuoteInformationRequired"
                            }
                        }
                    }
                ]
            },
            "QuoteAttributeValueChangeEvent_LVO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Event"
                    },
                    {
                        "description": "QuoteAttributeValueChange structure",
                        "type": "object",
                        "properties": {
                            "event": {
                                "$ref": "#/components/schemas/QuoteAttributeValueChange"
                            }
                        }
                    }
                ]
            }
        },
        "parameters": {
            "Id": {
                "name": "id",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "in": "path",
                "description": "Identifier of the Service"
            },
            "Fields": {
                "name": "fields",
                "in": "query",
                "description": "Comma-separated properties to be provided in response",
                "schema": {
                    "type": "string"
                }
            },
            "Offset": {
                "name": "offset",
                "in": "query",
                "description": "Requested index for start of resources to be provided in response",
                "schema": {
                    "type": "integer"
                }
            },
            "Limit": {
                "name": "limit",
                "in": "query",
                "description": "Requested number of resources to be provided in response",
                "schema": {
                    "type": "integer"
                }
            }
        },
        "requestBodies": {
            "Quote_Create": {
                "description": "The Quote to be created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Quote_LVO"
                        },
                        "examples": {
                            "CreateQuote": {
                                "$ref": "#/components/examples/CreateQuote_request"
                            }
                        }
                    }
                },
                "required": true
            },
            "Quote_Update": {
                "description": "The Quote to be patched",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Quote_UVO"
                        }
                    },
                    "application/merge-patch+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Quote_UVO"
                        },
                        "examples": {
                            "updateQuote_using_merge-patch_json": {
                                "$ref": "#/components/examples/updateQuote_using_merge-patch_json_request"
                            }
                        }
                    },
                    "application/json-patch+json": {
                        "schema": {
                            "$ref": "#/components/schemas/JsonPatch"
                        },
                        "examples": {
                            "updateQuote_using_json-patch_query": {
                                "$ref": "#/components/examples/updateQuote_using_json-patch_query_request"
                            }
                        }
                    },
                    "application/json-patch-query+json": {
                        "schema": {
                            "$ref": "#/components/schemas/JsonPatch"
                        }
                    }
                },
                "required": true
            },
            "QuoteCreateEvent_Create": {
                "description": "The QuoteCreateEvent to be created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteCreateEvent_LVO"
                        },
                        "examples": {
                            "QuoteCreateEvent": {
                                "$ref": "#/components/examples/QuoteCreateEvent_request"
                            }
                        }
                    }
                },
                "required": true
            },
            "QuoteStateChangeEvent_Create": {
                "description": "The QuoteStateChangeEvent to be created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteStateChangeEvent_LVO"
                        },
                        "examples": {
                            "QuoteStateChangeEvent": {
                                "$ref": "#/components/examples/QuoteStateChangeEvent_request"
                            }
                        }
                    }
                },
                "required": true
            },
            "QuoteDeleteEvent_Create": {
                "description": "The QuoteDeleteEvent to be created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteDeleteEvent_LVO"
                        },
                        "examples": {
                            "QuoteDeleteEvent": {
                                "$ref": "#/components/examples/QuoteDeleteEvent_request"
                            }
                        }
                    }
                },
                "required": true
            },
            "QuoteInformationRequiredEvent_Create": {
                "description": "The QuoteInformationRequiredEvent to be created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteInformationRequiredEvent_LVO"
                        },
                        "examples": {
                            "QuoteInformationRequiredEvent": {
                                "$ref": "#/components/examples/QuoteInformationRequiredEvent_request"
                            }
                        }
                    }
                },
                "required": true
            },
            "QuoteAttributeValueChangeEvent_Create": {
                "description": "The QuoteAttributeValueChangeEvent to be created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteAttributeValueChangeEvent_LVO"
                        },
                        "examples": {
                            "QuoteAttributeValueChangeEvent": {
                                "$ref": "#/components/examples/QuoteAttributeValueChangeEvent_request"
                            }
                        }
                    }
                },
                "required": true
            },
            "EventSubscriptionInput": {
                "description": "Data containing the callback endpoint to deliver the information",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/EventSubscriptionInput"
                        }
                    }
                },
                "required": true
            }
        },
        "responses": {
            "204": {
                "description": "Deleted",
                "content": {}
            },
            "200QuoteArray": {
                "description": "Success",
                "headers": {
                    "X-Total-Count": {
                        "$ref": "#/components/headers/X-Total-Count"
                    },
                    "X-Result-Count": {
                        "$ref": "#/components/headers/X-Result-Count"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Quote"
                            }
                        },
                        "examples": {
                            "RetrieveQuoteByList": {
                                "$ref": "#/components/examples/RetrieveQuoteByList_response"
                            },
                            "RetrieveQuoteByListwithFieldsSelection": {
                                "$ref": "#/components/examples/RetrieveQuoteByListwithFieldsSelection_response"
                            }
                        }
                    }
                }
            },
            "200Quote_Get": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Quote"
                        },
                        "examples": {
                            "retrieveById": {
                                "$ref": "#/components/examples/retrieveById_response"
                            }
                        }
                    }
                }
            },
            "200Quote_Patch": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Quote"
                        }
                    },
                    "application/merge-patch+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Quote"
                        },
                        "examples": {
                            "updateQuote_using_merge-patch_json": {
                                "$ref": "#/components/examples/updateQuote_using_merge-patch_json_response"
                            }
                        }
                    },
                    "application/json-patch+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Quote"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Quote"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        },
                        "examples": {
                            "updateQuote_using_json-patch_query": {
                                "$ref": "#/components/examples/updateQuote_using_json-patch_query_response"
                            }
                        }
                    },
                    "application/json-patch-query+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Quote"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Quote"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "200Quote_Put": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Quote"
                        }
                    }
                }
            },
            "201Quote": {
                "description": "Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Quote"
                        },
                        "examples": {
                            "CreateQuote": {
                                "$ref": "#/components/examples/CreateQuote_response"
                            }
                        }
                    }
                }
            },
            "200QuoteCreateEventArray": {
                "description": "Success",
                "headers": {
                    "X-Total-Count": {
                        "$ref": "#/components/headers/X-Total-Count"
                    },
                    "X-Result-Count": {
                        "$ref": "#/components/headers/X-Result-Count"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/QuoteCreateEvent"
                            }
                        }
                    }
                }
            },
            "200QuoteCreateEvent_Get": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteCreateEvent"
                        }
                    }
                }
            },
            "200QuoteCreateEvent_Patch": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteCreateEvent"
                        }
                    },
                    "application/merge-patch+json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteCreateEvent"
                        }
                    },
                    "application/json-patch+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/QuoteCreateEvent"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuoteCreateEvent"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        }
                    },
                    "application/json-patch-query+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/QuoteCreateEvent"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuoteCreateEvent"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "200QuoteCreateEvent_Put": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteCreateEvent"
                        }
                    }
                }
            },
            "201QuoteCreateEvent": {
                "description": "Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteCreateEvent"
                        }
                    }
                }
            },
            "200QuoteStateChangeEventArray": {
                "description": "Success",
                "headers": {
                    "X-Total-Count": {
                        "$ref": "#/components/headers/X-Total-Count"
                    },
                    "X-Result-Count": {
                        "$ref": "#/components/headers/X-Result-Count"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/QuoteStateChangeEvent"
                            }
                        }
                    }
                }
            },
            "200QuoteStateChangeEvent_Get": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteStateChangeEvent"
                        }
                    }
                }
            },
            "200QuoteStateChangeEvent_Patch": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteStateChangeEvent"
                        }
                    },
                    "application/merge-patch+json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteStateChangeEvent"
                        }
                    },
                    "application/json-patch+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/QuoteStateChangeEvent"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuoteStateChangeEvent"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        }
                    },
                    "application/json-patch-query+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/QuoteStateChangeEvent"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuoteStateChangeEvent"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "200QuoteStateChangeEvent_Put": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteStateChangeEvent"
                        }
                    }
                }
            },
            "201QuoteStateChangeEvent": {
                "description": "Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteStateChangeEvent"
                        }
                    }
                }
            },
            "200QuoteDeleteEventArray": {
                "description": "Success",
                "headers": {
                    "X-Total-Count": {
                        "$ref": "#/components/headers/X-Total-Count"
                    },
                    "X-Result-Count": {
                        "$ref": "#/components/headers/X-Result-Count"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/QuoteDeleteEvent"
                            }
                        }
                    }
                }
            },
            "200QuoteDeleteEvent_Get": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteDeleteEvent"
                        }
                    }
                }
            },
            "200QuoteDeleteEvent_Patch": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteDeleteEvent"
                        }
                    },
                    "application/merge-patch+json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteDeleteEvent"
                        }
                    },
                    "application/json-patch+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/QuoteDeleteEvent"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuoteDeleteEvent"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        }
                    },
                    "application/json-patch-query+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/QuoteDeleteEvent"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuoteDeleteEvent"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "200QuoteDeleteEvent_Put": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteDeleteEvent"
                        }
                    }
                }
            },
            "201QuoteDeleteEvent": {
                "description": "Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteDeleteEvent"
                        }
                    }
                }
            },
            "200QuoteInformationRequiredEventArray": {
                "description": "Success",
                "headers": {
                    "X-Total-Count": {
                        "$ref": "#/components/headers/X-Total-Count"
                    },
                    "X-Result-Count": {
                        "$ref": "#/components/headers/X-Result-Count"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/QuoteInformationRequiredEvent"
                            }
                        }
                    }
                }
            },
            "200QuoteInformationRequiredEvent_Get": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteInformationRequiredEvent"
                        }
                    }
                }
            },
            "200QuoteInformationRequiredEvent_Patch": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteInformationRequiredEvent"
                        }
                    },
                    "application/merge-patch+json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteInformationRequiredEvent"
                        }
                    },
                    "application/json-patch+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/QuoteInformationRequiredEvent"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuoteInformationRequiredEvent"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        }
                    },
                    "application/json-patch-query+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/QuoteInformationRequiredEvent"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuoteInformationRequiredEvent"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "200QuoteInformationRequiredEvent_Put": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteInformationRequiredEvent"
                        }
                    }
                }
            },
            "201QuoteInformationRequiredEvent": {
                "description": "Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteInformationRequiredEvent"
                        }
                    }
                }
            },
            "200QuoteAttributeValueChangeEventArray": {
                "description": "Success",
                "headers": {
                    "X-Total-Count": {
                        "$ref": "#/components/headers/X-Total-Count"
                    },
                    "X-Result-Count": {
                        "$ref": "#/components/headers/X-Result-Count"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/QuoteAttributeValueChangeEvent"
                            }
                        }
                    }
                }
            },
            "200QuoteAttributeValueChangeEvent_Get": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteAttributeValueChangeEvent"
                        }
                    }
                }
            },
            "200QuoteAttributeValueChangeEvent_Patch": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteAttributeValueChangeEvent"
                        }
                    },
                    "application/merge-patch+json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteAttributeValueChangeEvent"
                        }
                    },
                    "application/json-patch+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/QuoteAttributeValueChangeEvent"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuoteAttributeValueChangeEvent"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        }
                    },
                    "application/json-patch-query+json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/QuoteAttributeValueChangeEvent"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuoteAttributeValueChangeEvent"
                                    }
                                },
                                {
                                    "type": "string",
                                    "nullable": true
                                }
                            ]
                        }
                    }
                }
            },
            "200QuoteAttributeValueChangeEvent_Put": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteAttributeValueChangeEvent"
                        }
                    }
                }
            },
            "201QuoteAttributeValueChangeEvent": {
                "description": "Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/QuoteAttributeValueChangeEvent"
                        }
                    }
                }
            },
            "Error": {
                "description": "Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "EventSubscription": {
                "description": "Notified",
                "content": {
                    "application/json;charset=utf-8": {
                        "schema": {
                            "$ref": "#/components/schemas/EventSubscription"
                        }
                    }
                }
            }
        },
        "headers": {
            "X-Total-Count": {
                "description": "Total number of items matching criteria",
                "schema": {
                    "type": "integer"
                }
            },
            "X-Result-Count": {
                "description": "Actual number of items returned in the response body",
                "schema": {
                    "type": "integer"
                }
            }
        },
        "securitySchemes": {},
        "examples": {
            "retrieveById_response": {
                "value": {
                    "id": "12dd-78hg",
                    "href": "https://host:port/quoteManagement/v4/quote/12dd-78hg",
                    "@type": "Quote",
                    "category": "BSBS Quote",
                    "description": "Quote illustration",
                    "effectiveQuoteCompletionDate": "2021-05-013T12:45:12.028Z",
                    "expectedFulfillmentStartDate": "2021-05-21T12:45:12.028Z",
                    "expectedQuoteCompletionDate": "2021-05-14T12:45:12.028Z",
                    "externalId": [
                        {
                            "@type": "ExternalIdentifierExternalIdentifier",
                            "owner": "TMF",
                            "externalIdentifierType": "Quotenumber",
                            "id": "AK1"
                        }
                    ],
                    "instantSyncQuote": false,
                    "quoteDate": "2021-05-06T12:45:12.028Z",
                    "requestedQuoteCompletionDate": "2021-05-14T12:45:12.028Z",
                    "version": "1",
                    "agreement": [
                        {
                            "id": "7778-jj56",
                            "href": "https://host:port/agreementManagement/v4/agreement/7778-jj56",
                            "name": "Global Agreement",
                            "@type": "AgreementRef",
                            "@referredType": "MassAgreement"
                        }
                    ],
                    "billingAccount": [
                        {
                            "id": "BA4569",
                            "href": "https://host:port/accountManagement/v4/billingAccount/BA4569",
                            "@type": "BillingAccountRef"
                        }
                    ],
                    "contactMedium": [
                        {
                            "@type": "EmailContactMedium",
                            "contactMediumIdentifier": "11",
                            "preferred": true,
                            "emailAddress": "jean.pontus@PerfectCustomer.com"
                        }
                    ],
                    "note": [
                        {
                            "id": "1",
                            "author": "Jean Pontus",
                            "date": "2021-05-06T12:45:12.031Z",
                            "text": "This is a quote request following today call",
                            "@type": "Note"
                        }
                    ],
                    "productOfferingQualification": [
                        {
                            "id": "22ds-ty55",
                            "@type": "ProductOfferingQualificationRef",
                            "href": "https://host:port/productOfferingQualificationManagement/v4/productOfferingQualification/22ds-ty55"
                        }
                    ],
                    "authorization": [
                        {
                            "givenDate": "2021-05-08T12:45:12.031Z",
                            "name": "Discount validation",
                            "@type": "Authorization",
                            "requestedDate": "2021-05-09T12:45:12.031Z",
                            "signatureRepresentation": "Manager approval",
                            "state": "validated",
                            "approver": [
                                {
                                    "name": "Joe Doe",
                                    "role": "B2B Discount approver"
                                }
                            ]
                        }
                    ],
                    "quoteItem": [
                        {
                            "id": "1",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 1,
                            "state": "approved",
                            "product": {
                                "@type": "ProductValue",
                                "productCharacteristic": [
                                    {
                                        "@type": "StringCharacteristic",
                                        "id": "Char1",
                                        "name": "Voice Bundle",
                                        "value": "unlimited"
                                    },
                                    {
                                        "@type": "ObjectCharacteristic",
                                        "id": "Char5",
                                        "name": "Data Bundle",
                                        "value": {
                                            "volume": 50,
                                            "unit": "Gb/month"
                                        }
                                    }
                                ],
                                "productSpecification": {
                                    "id": "ssp7-ty89",
                                    "href": "https://host:port/productCatalogManagement/v4/productSpecification/ssp7-ty89",
                                    "name": "TMF Tariff Plan",
                                    "@type": "ProductSpecificationRef"
                                }
                            },
                            "productOffering": {
                                "id": "54gg-zza1",
                                "href": "https://host:port/productCatalogManagement/v4/productSpecification/54gg-zza1",
                                "name": "TMF Tarif Plan 25",
                                "@type": "ProductOfferingRef"
                            },
                            "quoteItemPrice": [
                                {
                                    "description": "Tariff plan 25 fee",
                                    "name": "Tariff Plan 25 tariff",
                                    "priceType": "recurring",
                                    "recurringChargePeriod": "month",
                                    "@type": "QuotePrice",
                                    "price": {
                                        "@type": "Price",
                                        "taxRate": 16,
                                        "dutyFreeAmount": {
                                            "unit": "EUR",
                                            "value": 30,
                                            "@type": "Money"
                                        },
                                        "taxIncludedAmount": {
                                            "unit": "EUR",
                                            "value": 34.8,
                                            "@type": "Money"
                                        }
                                    },
                                    "priceAlteration": [
                                        {
                                            "applicationDuration": 0,
                                            "description": "Specific Discount for PerfectCustomer company",
                                            "name": "10% off",
                                            "priceType": "recurring",
                                            "priority": 1,
                                            "recurringChargePeriod": "month",
                                            "@type": "PriceAlteration",
                                            "price": {
                                                "percentage": 10,
                                                "@type": "Price"
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "id": "2",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 10,
                            "state": "approved",
                            "attachment": [
                                {
                                    "@type": "Attachment",
                                    "attachmentType": "brochure",
                                    "description": "handset brochure",
                                    "mimeType": "pdf",
                                    "name": "Handset commercial brochure.pdf",
                                    "url": "www.tmf_hanset/contentMangement/brochure.pdf",
                                    "size": {
                                        "amount": 3.7,
                                        "units": "Mb"
                                    },
                                    "validFor": {
                                        "startDateTime": "2021-05-06T12:45:12.031Z"
                                    }
                                }
                            ],
                            "product": {
                                "@type": "ProductValue",
                                "productSpecification": {
                                    "id": "qq45-ytr7",
                                    "href": "https://host:port/productCatalogManagement/v4/productSpecification/qq45-ytr7",
                                    "name": "Handset",
                                    "@type": "ProductSpecificationRef",
                                    "version": "1"
                                }
                            },
                            "productOffering": {
                                "id": "z789-78ga",
                                "href": "https://host:port/productCatalogManagement/v4/productOffering/z789-78ga",
                                "name": "TMF handset T9+",
                                "@type": "ProductOfferingRef"
                            },
                            "quoteItemPrice": [
                                {
                                    "description": "Handset",
                                    "name": "Handset Fee",
                                    "priceType": "nonRecurring",
                                    "@type": "QuotePrice",
                                    "price": {
                                        "@type": "Price",
                                        "taxRate": 16,
                                        "dutyFreeAmount": {
                                            "unit": "EUR",
                                            "value": 350,
                                            "@type": "Money"
                                        },
                                        "taxIncludedAmount": {
                                            "unit": "EUR",
                                            "value": 406,
                                            "@type": "Money"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "id": "3",
                            "@type": "QuoteItem",
                            "action": "remove",
                            "state": "approved",
                            "product": {
                                "@type": "ProductRef",
                                "id": "456",
                                "href": "https://host:port/productInventory/v4/product/456",
                                "version": "1"
                            }
                        }
                    ],
                    "relatedParty": [
                        {
                            "name": "Jean Pontus",
                            "role": "Buyer Contact",
                            "id": "qsdd-9888",
                            "@referredType": "Individual"
                        },
                        {
                            "name": "PerfectCustomer",
                            "role": "Buyer organization",
                            "id": "55",
                            "@referredType": "Organization"
                        },
                        {
                            "name": "Joe Doe",
                            "role": "Seller Contact",
                            "id": "45gh-gh89",
                            "@referredType": "Individual"
                        }
                    ],
                    "state": "approved",
                    "validFor": {
                        "endDateTime": "2021-05-06T12:45:12.033Z",
                        "startDateTime": "2021-05-06T12:45:12.033Z"
                    }
                },
                "description": "Retrieve a quote from its identifier - only a subset of quote attributes (as defined in the API) are used in this example."
            },
            "RetrieveQuoteByList_response": {
                "value": [
                    {
                        "@type": "Quote",
                        "category": "BSBS Quote",
                        "description": "Quote illustration",
                        "expectedFulfillmentStartDate": "2021-05-21T12:45:12.028Z",
                        "expectedQuoteCompletionDate": "2021-05-14T12:45:12.028Z",
                        "externalId": [
                            {
                                "@type": "ExternalIdentifierExternalIdentifier",
                                "owner": "TMF",
                                "externalIdentifierType": "Quotenumber",
                                "id": "AK1"
                            }
                        ],
                        "instantSyncQuote": false,
                        "requestedQuoteCompletionDate": "2021-05-14T12:45:12.028Z",
                        "version": "1",
                        "agreement": [
                            {
                                "id": "7778-jj56",
                                "href": "https://host:port/agreementManagement/v4/agreement/7778-jj56",
                                "name": "Global Agreement",
                                "@type": "AgreementRef"
                            }
                        ],
                        "billingAccount": [
                            {
                                "id": "BA4569",
                                "@type": "BillingAccountRef"
                            }
                        ],
                        "contactMedium": [
                            {
                                "@type": "EmailContactMedium",
                                "contactMediumIdentifier": "11",
                                "preferred": true,
                                "emailAddress": "jean.pontus@PerfectCustomer.com"
                            }
                        ],
                        "note": [
                            {
                                "id": "1",
                                "author": "Jean Pontus",
                                "date": "2021-05-06T12:45:12.031Z",
                                "text": "This is a quote request following today call",
                                "@type": "Note"
                            }
                        ],
                        "productOfferingQualification": [
                            {
                                "id": "22ds-ty55",
                                "@type": "ProductOfferingQualificationRef"
                            }
                        ],
                        "quoteItem": [
                            {
                                "id": "1",
                                "@type": "QuoteItem",
                                "action": "add",
                                "quantity": 1,
                                "product": {
                                    "@type": "ProductValue",
                                    "productCharacteristic": [
                                        {
                                            "@type": "StringCharacteristic",
                                            "id": "Char1",
                                            "name": "Voice Bundle",
                                            "value": "unlimited"
                                        },
                                        {
                                            "@type": "ObjectCharacteristic",
                                            "id": "Char5",
                                            "name": "Data Bundle",
                                            "value": {
                                                "volume": 50,
                                                "unit": "Gb/month"
                                            }
                                        }
                                    ],
                                    "productSpecification": {
                                        "id": "ssp7-ty89",
                                        "name": "TMF Tariff Plan",
                                        "@type": "ProductSpecificationRef"
                                    }
                                },
                                "productOffering": {
                                    "id": "54gg-zza1",
                                    "name": "TMF Tarif Plan 25",
                                    "@type": "ProductOfferingRef"
                                }
                            },
                            {
                                "id": "2",
                                "@type": "QuoteItem",
                                "action": "add",
                                "quantity": 10,
                                "product": {
                                    "@type": "ProductValue",
                                    "productSpecification": {
                                        "id": "qq45-ytr7",
                                        "name": "Handset",
                                        "version": "1",
                                        "@type": "ProductSpecificationRef"
                                    }
                                },
                                "productOffering": {
                                    "id": "z789-78ga",
                                    "name": "TMF handset T9+",
                                    "@type": "ProductOfferingRef"
                                }
                            },
                            {
                                "id": "3",
                                "@type": "QuoteItem",
                                "action": "remove",
                                "product": {
                                    "@type": "ProductRef",
                                    "id": "456",
                                    "version": "1"
                                }
                            }
                        ],
                        "relatedParty": [
                            {
                                "name": "Jean Pontus",
                                "role": "Buyer Contact",
                                "id": "qsdd-9888",
                                "@referredType": "Individual"
                            },
                            {
                                "name": "PerfectCustomer",
                                "role": "Buyer organization",
                                "id": "55",
                                "@referredType": "Organization"
                            },
                            {
                                "name": "Joe Doe",
                                "role": "Seller Contact",
                                "id": "45gh-gh89",
                                "@referredType": "Individual"
                            }
                        ]
                    }
                ],
                "description": "Retrieve a list of quote(s) - Complete quote representation are sent back."
            },
            "RetrieveQuoteByListwithFieldsSelection_response": {
                "value": [
                    {
                        "id": "9ffg-ze56-ed51",
                        "href": ".../QuoteManagement/v4/quote/9ffg-ze56-ed51",
                        "state": "accepted",
                        "@type": "Quote",
                        "expectedQuoteCompletionDate": "2019-04-11T14:52:21.823Z"
                    },
                    {
                        "id": "7412",
                        "href": ".../QuoteManagement/v4/quote/7412",
                        "state": "approved",
                        "@type": "Quote",
                        "expectedQuoteCompletionDate": "2019-04-18T14:21:31.325Z"
                    },
                    {
                        "id": "3214",
                        "href": ".../QuoteManagement/v4/quote/3214",
                        "state": "pending",
                        "@type": "Quote",
                        "expectedQuoteCompletionDate": "2019-04-21T18:08:31.325Z"
                    },
                    {
                        "id": "6547",
                        "href": ".../QuoteManagement/v4/quote/6547",
                        "state": "inProgress",
                        "@type": "Quote",
                        "expectedQuoteCompletionDate": "2019-04-29T10:48:28.325Z"
                    }
                ],
                "description": "Retrieve a list of quote(s) with filter selection - only few attributes are retrieved for each quote."
            },
            "CreateQuote_request": {
                "value": {
                    "@type": "Quote",
                    "category": "BSBS Quote",
                    "description": "Quote illustration",
                    "expectedFulfillmentStartDate": "2021-05-21T12:45:12.028Z",
                    "expectedQuoteCompletionDate": "2021-05-14T12:45:12.028Z",
                    "externalId": [
                        {
                            "@type": "ExternalIdentifierExternalIdentifier",
                            "owner": "TMF",
                            "externalIdentifierType": "Quotenumber",
                            "id": "AK1"
                        }
                    ],
                    "instantSyncQuote": false,
                    "requestedQuoteCompletionDate": "2021-05-14T12:45:12.028Z",
                    "version": "1",
                    "agreement": [
                        {
                            "id": "7778-jj56",
                            "href": "https://host:port/agreementManagement/v4/agreement/7778-jj56",
                            "name": "Global Agreement",
                            "@type": "AgreementRef"
                        }
                    ],
                    "billingAccount": [
                        {
                            "id": "BA4569",
                            "@type": "BillingAccountRef"
                        }
                    ],
                    "contactMedium": [
                        {
                            "@type": "EmailContactMedium",
                            "contactMediumIdentifier": "11",
                            "preferred": true,
                            "emailAddress": "jean.pontus@PerfectCustomer.com"
                        }
                    ],
                    "note": [
                        {
                            "id": "1",
                            "author": "Jean Pontus",
                            "date": "2021-05-06T12:45:12.031Z",
                            "text": "This is a quote request following today call",
                            "@type": "Note"
                        }
                    ],
                    "productOfferingQualification": [
                        {
                            "id": "22ds-ty55",
                            "@type": "ProductOfferingQualificationRef"
                        }
                    ],
                    "quoteItem": [
                        {
                            "id": "1",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 1,
                            "product": {
                                "@type": "ProductValue",
                                "productCharacteristic": [
                                    {
                                        "@type": "StringCharacteristic",
                                        "id": "Char1",
                                        "name": "Voice Bundle",
                                        "value": "unlimited"
                                    },
                                    {
                                        "@type": "ObjectCharacteristic",
                                        "id": "Char5",
                                        "name": "Data Bundle",
                                        "value": {
                                            "volume": 50,
                                            "unit": "Gb/month"
                                        }
                                    }
                                ],
                                "productSpecification": {
                                    "id": "ssp7-ty89",
                                    "name": "TMF Tariff Plan",
                                    "@type": "ProductSpecificationRef"
                                }
                            },
                            "productOffering": {
                                "id": "54gg-zza1",
                                "name": "TMF Tarif Plan 25",
                                "@type": "ProductOfferingRef"
                            }
                        },
                        {
                            "id": "2",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 10,
                            "product": {
                                "@type": "ProductValue",
                                "productSpecification": {
                                    "id": "qq45-ytr7",
                                    "name": "Handset",
                                    "version": "1",
                                    "@type": "ProductSpecificationRef"
                                }
                            },
                            "productOffering": {
                                "id": "z789-78ga",
                                "name": "TMF handset T9+",
                                "@type": "ProductOfferingRef"
                            }
                        },
                        {
                            "id": "3",
                            "@type": "QuoteItem",
                            "action": "remove",
                            "product": {
                                "@type": "ProductRef",
                                "id": "456",
                                "version": "1"
                            }
                        }
                    ],
                    "relatedParty": [
                        {
                            "name": "Jean Pontus",
                            "role": "Buyer Contact",
                            "id": "qsdd-9888",
                            "@referredType": "Individual"
                        },
                        {
                            "name": "PerfectCustomer",
                            "role": "Buyer organization",
                            "id": "55",
                            "@referredType": "Organization"
                        },
                        {
                            "name": "Joe Doe",
                            "role": "Seller Contact",
                            "id": "45gh-gh89",
                            "@referredType": "Individual"
                        }
                    ]
                },
                "description": "POST Quote request example - only a subset of quote attributes are used in this example"
            },
            "CreateQuote_response": {
                "value": {
                    "id": "12dd-78hg",
                    "href": "https://host:port/quoteManagement/v4/quote/12dd-78hg",
                    "@type": "Quote",
                    "category": "BSBS Quote",
                    "description": "Quote illustration",
                    "effectiveQuoteCompletionDate": "2021-05-013T12:45:12.028Z",
                    "expectedFulfillmentStartDate": "2021-05-21T12:45:12.028Z",
                    "expectedQuoteCompletionDate": "2021-05-14T12:45:12.028Z",
                    "externalId": [
                        {
                            "@type": "ExternalIdentifierExternalIdentifier",
                            "owner": "TMF",
                            "externalIdentifierType": "Quotenumber",
                            "id": "AK1"
                        }
                    ],
                    "instantSyncQuote": false,
                    "quoteDate": "2021-05-06T12:45:12.028Z",
                    "requestedQuoteCompletionDate": "2021-05-14T12:45:12.028Z",
                    "version": "1",
                    "agreement": [
                        {
                            "id": "7778-jj56",
                            "href": "https://host:port/agreementManagement/v4/agreement/7778-jj56",
                            "name": "Global Agreement",
                            "@type": "AgreementRef"
                        }
                    ],
                    "billingAccount": [
                        {
                            "id": "BA4569",
                            "href": "https://host:port/accountManagement/v4/billingAccount/BA4569",
                            "@type": "BillingAccountRef"
                        }
                    ],
                    "contactMedium": [
                        {
                            "@type": "EmailContactMedium",
                            "contactMediumIdentifier": "11",
                            "preferred": true,
                            "emailAddress": "jean.pontus@PerfectCustomer.com"
                        }
                    ],
                    "note": [
                        {
                            "id": "1",
                            "author": "Jean Pontus",
                            "date": "2021-05-06T12:45:12.031Z",
                            "text": "This is a quote request following today call",
                            "@type": "Note"
                        }
                    ],
                    "productOfferingQualification": [
                        {
                            "id": "22ds-ty55",
                            "@type": "ProductOfferingQualificationRef",
                            "href": "https://host:port/productOfferingQualificationManagement/v4/productOfferingQualification/22ds-ty55"
                        }
                    ],
                    "authorization": [
                        {
                            "givenDate": "2021-05-08T12:45:12.031Z",
                            "name": "Discount validation",
                            "@type": "Authorization",
                            "requestedDate": "2021-05-09T12:45:12.031Z",
                            "signatureRepresentation": "Manager approval",
                            "state": "validated",
                            "approver": [
                                {
                                    "name": "Joe Doe",
                                    "role": "B2B Discount approver"
                                }
                            ]
                        }
                    ],
                    "quoteItem": [
                        {
                            "id": "1",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 1,
                            "state": "approved",
                            "product": {
                                "@type": "ProductValue",
                                "productCharacteristic": [
                                    {
                                        "@type": "StringCharacteristic",
                                        "id": "Char1",
                                        "name": "Voice Bundle",
                                        "value": "unlimited"
                                    },
                                    {
                                        "@type": "ObjectCharacteristic",
                                        "id": "Char5",
                                        "name": "Data Bundle",
                                        "value": {
                                            "volume": 50,
                                            "unit": "Gb/month"
                                        }
                                    }
                                ],
                                "productSpecification": {
                                    "id": "ssp7-ty89",
                                    "href": "https://host:port/productCatalogManagement/v4/productSpecification/ssp7-ty89",
                                    "name": "TMF Tariff Plan",
                                    "@type": "ProductSpecificationRef"
                                }
                            },
                            "productOffering": {
                                "id": "54gg-zza1",
                                "href": "https://host:port/productCatalogManagement/v4/productSpecification/54gg-zza1",
                                "name": "TMF Tarif Plan 25",
                                "@type": "ProductOfferingRef"
                            },
                            "quoteItemPrice": [
                                {
                                    "description": "Tariff plan 25 fee",
                                    "name": "Tariff Plan 25 tariff",
                                    "priceType": "recurring",
                                    "recurringChargePeriod": "month",
                                    "@type": "QuotePrice",
                                    "price": {
                                        "@type": "Price",
                                        "taxRate": 16,
                                        "dutyFreeAmount": {
                                            "unit": "EUR",
                                            "value": 30,
                                            "@type": "Money"
                                        },
                                        "taxIncludedAmount": {
                                            "unit": "EUR",
                                            "value": 34.8,
                                            "@type": "Money"
                                        }
                                    },
                                    "priceAlteration": [
                                        {
                                            "applicationDuration": 0,
                                            "description": "Specific Discount for PerfectCustomer company",
                                            "name": "10% off",
                                            "priceType": "recurring",
                                            "priority": 1,
                                            "recurringChargePeriod": "month",
                                            "@type": "PriceAlteration",
                                            "price": {
                                                "percentage": 10,
                                                "@type": "Price"
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "id": "2",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 10,
                            "state": "approved",
                            "attachment": [
                                {
                                    "@type": "Attachment",
                                    "attachmentType": "brochure",
                                    "description": "handset brochure",
                                    "mimeType": "pdf",
                                    "name": "Handset commercial brochure.pdf",
                                    "url": "www.tmf_hanset/contentMangement/brochure.pdf",
                                    "size": {
                                        "amount": 3.7,
                                        "units": "Mb"
                                    },
                                    "validFor": {
                                        "startDateTime": "2021-05-06T12:45:12.031Z"
                                    }
                                }
                            ],
                            "product": {
                                "@type": "ProductValue",
                                "productSpecification": {
                                    "id": "qq45-ytr7",
                                    "href": "https://host:port/productCatalogManagement/v4/productSpecification/qq45-ytr7",
                                    "name": "Handset",
                                    "@type": "ProductSpecificationRef",
                                    "version": "1"
                                }
                            },
                            "productOffering": {
                                "id": "z789-78ga",
                                "href": "https://host:port/productCatalogManagement/v4/productOffering/z789-78ga",
                                "name": "TMF handset T9+",
                                "@type": "ProductOfferingRef"
                            },
                            "quoteItemPrice": [
                                {
                                    "description": "Handset",
                                    "name": "Handset Fee",
                                    "priceType": "nonRecurring",
                                    "@type": "QuotePrice",
                                    "price": {
                                        "@type": "Price",
                                        "taxRate": 16,
                                        "dutyFreeAmount": {
                                            "unit": "EUR",
                                            "value": 350,
                                            "@type": "Money"
                                        },
                                        "taxIncludedAmount": {
                                            "unit": "EUR",
                                            "value": 406,
                                            "@type": "Money"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "id": "3",
                            "@type": "QuoteItem",
                            "action": "remove",
                            "state": "approved",
                            "product": {
                                "@type": "ProductRef",
                                "id": "456",
                                "href": "https://host:port/productInventory/v4/product/456",
                                "version": "1"
                            }
                        }
                    ],
                    "relatedParty": [
                        {
                            "name": "Jean Pontus",
                            "role": "Buyer Contact",
                            "id": "qsdd-9888",
                            "@referredType": "Individual"
                        },
                        {
                            "name": "PerfectCustomer",
                            "role": "Buyer organization",
                            "id": "55",
                            "@referredType": "Organization"
                        },
                        {
                            "name": "Joe Doe",
                            "role": "Seller Contact",
                            "id": "45gh-gh89",
                            "@referredType": "Individual"
                        }
                    ],
                    "state": "approved",
                    "validFor": {
                        "endDateTime": "2021-05-06T12:45:12.033Z",
                        "startDateTime": "2021-05-06T12:45:12.033Z"
                    }
                },
                "description": "POST Quote response description."
            },
            "QuoteCreateEvent_request": {
                "value": {
                    "correlationId": "126-54f",
                    "description": "QuoteCreateEvent illustration",
                    "domain": "Commercial",
                    "eventId": "125",
                    "eventTime": "2021-09-27T07:43:59.059Z",
                    "eventType": "QuoteCreateEvent",
                    "priority": "1",
                    "timeOcurred": "2021-09-27T07:43:59.059Z",
                    "title": "QuoteCreateEvent",
                    "event": {
                        "quote": {
                            "id": "12dd-78hg",
                            "href": "https://host:port/quoteManagement/v4/quote/12dd-78hg",
                            "@type": "Quote",
                            "category": "BSBS Quote",
                            "description": "Quote illustration",
                            "effectiveQuoteCompletionDate": "2021-05-013T12:45:12.028Z",
                            "expectedFulfillmentStartDate": "2021-05-21T12:45:12.028Z",
                            "expectedQuoteCompletionDate": "2021-05-14T12:45:12.028Z",
                            "externalId": [
                                {
                                    "@type": "ExternalIdentifierExternalIdentifier",
                                    "owner": "TMF",
                                    "externalIdentifierType": "Quotenumber",
                                    "id": "AK1"
                                }
                            ],
                            "instantSyncQuote": false,
                            "quoteDate": "2021-05-06T12:45:12.028Z",
                            "requestedQuoteCompletionDate": "2021-05-14T12:45:12.028Z",
                            "version": "1",
                            "agreement": [
                                {
                                    "id": "7778-jj56",
                                    "href": "https://host:port/agreementManagement/v4/agreement/7778-jj56",
                                    "name": "Global Agrrement",
                                    "@type": "AgreementRef",
                                    "@referredType": "MassAgreement"
                                }
                            ],
                            "billingAccount": [
                                {
                                    "id": "BA4569",
                                    "href": "https://host:port/accountManagement/v4/billingAccount/BA4569",
                                    "@type": "BillingAccountRef"
                                }
                            ],
                            "contactMedium": [
                                {
                                    "@type": "EmailContactMedium",
                                    "contactMediumIdentifier": "11",
                                    "preferred": true,
                                    "emailAddress": "jean.pontus@PerfectCustomer.com"
                                }
                            ],
                            "note": [
                                {
                                    "id": "1",
                                    "author": "Jean Pontus",
                                    "date": "2021-05-06T12:45:12.031Z",
                                    "text": "This is a quote request following today call",
                                    "@type": "Note"
                                }
                            ],
                            "productOfferingQualification": [
                                {
                                    "id": "22ds-ty55",
                                    "@type": "ProductOfferingQualificationRef",
                                    "href": "https://host:port/productOfferingQualificationManagement/v4/productOfferingQualification/22ds-ty55"
                                }
                            ],
                            "authorization": [
                                {
                                    "givenDate": "2021-05-08T12:45:12.031Z",
                                    "name": "Discount validation",
                                    "@type": "Authorization",
                                    "requestedDate": "2021-05-09T12:45:12.031Z",
                                    "signatureRepresentation": "Manager approval",
                                    "state": "validated",
                                    "approver": [
                                        {
                                            "name": "Joe Doe",
                                            "role": "B2B Discount approver"
                                        }
                                    ]
                                }
                            ],
                            "quoteItem": [
                                {
                                    "id": "1",
                                    "@type": "QuoteItem",
                                    "action": "add",
                                    "quantity": 1,
                                    "state": "approved",
                                    "product": {
                                        "@type": "product",
                                        "productCharacteristic": [
                                            {
                                                "@type": "StringCharacteristic",
                                                "id": "Char1",
                                                "name": "Voice Bundle",
                                                "value": "unlimited"
                                            },
                                            {
                                                "@type": "ObjectCharacteristic",
                                                "id": "Char5",
                                                "name": "Data Bundle",
                                                "value": {
                                                    "volume": 50,
                                                    "unit": "Gb/month"
                                                }
                                            }
                                        ],
                                        "productSpecification": {
                                            "id": "ssp7-ty89",
                                            "href": "https://host:port/productCatalogManagement/v4/productSpecification/ssp7-ty89",
                                            "name": "TMF Tariff Plan",
                                            "@type": "ProductSpecificationRef"
                                        }
                                    },
                                    "productOffering": {
                                        "id": "54gg-zza1",
                                        "href": "https://host:port/productCatalogManagement/v4/productSpecification/54gg-zza1",
                                        "name": "TMF Tarif Plan 25",
                                        "@type": "ProductOfferingRef"
                                    },
                                    "quoteItemPrice": [
                                        {
                                            "description": "Tariff plan 25 fee",
                                            "name": "Tariff Plan 25 tariff",
                                            "priceType": "recurring",
                                            "recurringChargePeriod": "month",
                                            "@type": "QuotePrice",
                                            "price": {
                                                "@type": "Price",
                                                "taxRate": 16,
                                                "dutyFreeAmount": {
                                                    "unit": "EUR",
                                                    "value": 30,
                                                    "@type": "Money"
                                                },
                                                "taxIncludedAmount": {
                                                    "unit": "EUR",
                                                    "value": 34.8,
                                                    "@type": "Money"
                                                }
                                            },
                                            "priceAlteration": [
                                                {
                                                    "applicationDuration": 0,
                                                    "description": "Specific Discount for PerfectCustomer company",
                                                    "name": "10% off",
                                                    "priceType": "recurring",
                                                    "priority": 1,
                                                    "recurringChargePeriod": "month",
                                                    "@type": "PriceAlteration",
                                                    "price": {
                                                        "percentage": 10,
                                                        "@type": "Price"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "id": "2",
                                    "@type": "QuoteItem",
                                    "action": "add",
                                    "quantity": 10,
                                    "state": "approved",
                                    "attachment": [
                                        {
                                            "@type": "Attachment",
                                            "attachmentType": "brochure",
                                            "description": "handset brochure",
                                            "mimeType": "pdf",
                                            "name": "Handset commercial brochure.pdf",
                                            "url": "www.tmf_hanset/contentMangement/brochure.pdf",
                                            "size": {
                                                "amount": 3.7,
                                                "units": "Mb"
                                            },
                                            "validFor": {
                                                "startDateTime": "2021-05-06T12:45:12.031Z"
                                            }
                                        }
                                    ],
                                    "product": {
                                        "@type": "Product",
                                        "productSpecification": {
                                            "id": "qq45-ytr7",
                                            "href": "https://host:port/productCatalogManagement/v4/productSpecification/qq45-ytr7",
                                            "name": "Handset",
                                            "@type": "ProductSpecificationRef",
                                            "version": "1"
                                        }
                                    },
                                    "productOffering": {
                                        "id": "z789-78ga",
                                        "href": "https://host:port/productCatalogManagement/v4/productOffering/z789-78ga",
                                        "name": "TMF handset T9+",
                                        "@type": "ProductOfferingRef"
                                    },
                                    "quoteItemPrice": [
                                        {
                                            "description": "Handset",
                                            "name": "Handset Fee",
                                            "priceType": "nonRecurring",
                                            "@type": "QuotePrice",
                                            "price": {
                                                "@type": "Price",
                                                "taxRate": 16,
                                                "dutyFreeAmount": {
                                                    "unit": "EUR",
                                                    "value": 350,
                                                    "@type": "Money"
                                                },
                                                "taxIncludedAmount": {
                                                    "unit": "EUR",
                                                    "value": 406,
                                                    "@type": "Money"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "id": "3",
                                    "@type": "QuoteItem",
                                    "action": "remove",
                                    "state": "approved",
                                    "product": {
                                        "@type": "ProductRef",
                                        "id": "456",
                                        "href": "https://host:port/productInventory/v4/product/456",
                                        "version": "1"
                                    }
                                }
                            ],
                            "relatedParty": [
                                {
                                    "name": "Jean Pontus",
                                    "role": "Buyer Contact",
                                    "id": "qsdd-9888",
                                    "@referredType": "Individual"
                                },
                                {
                                    "name": "PerfectCustomer",
                                    "role": "Buyer organization",
                                    "id": "55",
                                    "@referredType": "Organization"
                                },
                                {
                                    "name": "Joe Doe",
                                    "role": "Seller Contact",
                                    "id": "45gh-gh89",
                                    "@referredType": "Individual"
                                }
                            ],
                            "state": "approved",
                            "validFor": {
                                "endDateTime": "2021-05-06T12:45:12.033Z",
                                "startDateTime": "2021-05-06T12:45:12.033Z"
                            }
                        }
                    },
                    "relatedParty": [
                        {
                            "id": "56d",
                            "role": "Issuer",
                            "@type": "RelatedParty",
                            "@referredType": "Organization"
                        }
                    ],
                    "reportingSystem": {
                        "id": "123",
                        "name": "CRM app",
                        "@type": "ReportingResource",
                        "@referredType": "LogicalResource"
                    },
                    "source": {
                        "id": "123",
                        "name": "CRM app",
                        "@type": "ReportingResource",
                        "@referredType": "LogicalResource"
                    },
                    "@baseType": "Event",
                    "@type": "QuoteCreateEvent"
                },
                "description": "Message example for QuoteCreateEvent event"
            },
            "QuoteStateChangeEvent_request": {
                "value": {
                    "correlationId": "333-fd6",
                    "description": "QuoteStateChangeEvent illustration",
                    "domain": "Commercial",
                    "eventId": "569",
                    "eventTime": "2021-09-27T07:43:59.059Z",
                    "eventType": "QuoteStateChangeEvent",
                    "priority": "1",
                    "timeOcurred": "2021-09-27T07:43:59.059Z",
                    "title": "QuoteStateChangeEvent",
                    "event": {
                        "quote": {
                            "id": "9693",
                            "href": "https://host:port/quoteManagement/v4/quote/9693",
                            "@type": "Quote",
                            "state": "approved",
                            "itemStateChange": [
                                {
                                    "itemId": "1",
                                    "state": "approved"
                                },
                                {
                                    "itemId": "2",
                                    "state": "approved"
                                }
                            ]
                        }
                    },
                    "reportingSystem": {
                        "id": "123",
                        "name": "CRM app",
                        "@type": "ReportingResource",
                        "@referredType": "LogicalResource"
                    },
                    "source": {
                        "id": "123",
                        "name": "CRM app",
                        "@type": "ReportingResource",
                        "@referredType": "LogicalResource"
                    },
                    "@baseType": "Event",
                    "@type": "QuoteStateChangeEvent"
                },
                "description": "Message example for QuoteStateChangeEvent event"
            },
            "QuoteDeleteEvent_request": {
                "value": {
                    "correlationId": "145d-8hh",
                    "description": "QuoteDeleteEvent illustration",
                    "domain": "Commercial",
                    "eventId": "523",
                    "eventTime": "2021-09-27T07:43:59.059Z",
                    "eventType": "QuoteDeleteEvent",
                    "priority": "3",
                    "timeOcurred": "2021-09-27T07:43:59.059Z",
                    "title": "QuoteDeleteEvent",
                    "event": {
                        "quote": {
                            "id": "9693",
                            "href": "https://host:port/quoteManagement/v4/quote/9693"
                        }
                    },
                    "reportingSystem": {
                        "id": "123",
                        "name": "CRM app",
                        "@type": "ReportingResource",
                        "@referredType": "LogicalResource"
                    },
                    "source": {
                        "id": "123",
                        "name": "CRM app",
                        "@type": "ReportingResource",
                        "@referredType": "LogicalResource"
                    },
                    "@baseType": "Event",
                    "@type": "QuoteDeleteEvent"
                },
                "description": "Message example for QuoteDeleteEvent event"
            },
            "QuoteInformationRequiredEvent_request": {
                "value": {
                    "correlationId": "qs1-k33",
                    "description": "QuoteInformationRequiredEvent illustration",
                    "domain": "Commercial",
                    "eventId": "966",
                    "eventTime": "2021-09-27T07:43:59.059Z",
                    "eventType": "QuoteInformationRequiredEvent",
                    "priority": "1",
                    "timeOcurred": "2021-09-27T07:43:59.059Z",
                    "title": "QuoteInformationRequiredEvent",
                    "event": {
                        "quote": {
                            "id": "5252",
                            "href": "https://host:port/quoteManagement/v4/quote/5252",
                            "@type": "Quote",
                            "informationRequiredPath": [
                                {
                                    "path": "agreement.id"
                                },
                                {
                                    "path": "contactMedium"
                                }
                            ]
                        }
                    },
                    "reportingSystem": {
                        "id": "123",
                        "name": "CRM app",
                        "@type": "ReportingResource",
                        "@referredType": "LogicalResource"
                    },
                    "source": {
                        "id": "123",
                        "name": "CRM app",
                        "@type": "ReportingResource",
                        "@referredType": "LogicalResource"
                    },
                    "@baseType": "Event",
                    "@type": "QuoteInformationRequiredEvent"
                },
                "description": "Message example for QuoteInformationRequiredEvent event"
            },
            "QuoteAttributeValueChangeEvent_request": {
                "value": {
                    "correlationId": "akj-566",
                    "description": "QuoteAttributeValueChangeEvent illustration",
                    "domain": "Commercial",
                    "eventId": "741",
                    "eventTime": "2021-09-27T07:43:59.059Z",
                    "eventType": "QuoteAttributeValueChangeEvent",
                    "priority": "1",
                    "timeOcurred": "2021-09-27T07:43:59.059Z",
                    "title": "QuoteAttributeValueChangeEvent",
                    "event": {
                        "quote": {
                            "id": "12dd-78hg",
                            "quoteItem": [
                                {
                                    "id": "2",
                                    "@type": "QuoteItem",
                                    "quantity": 12
                                }
                            ],
                            "relatedParty": [
                                {
                                    "name": "Louise Pontus",
                                    "role": "Buyer Contact",
                                    "@referredType": "Individual"
                                }
                            ],
                            "@type": "Quote"
                        }
                    },
                    "reportingSystem": {
                        "id": "123",
                        "name": "CRM app",
                        "@type": "ReportingResource",
                        "@referredType": "LogicalResource"
                    },
                    "source": {
                        "id": "123",
                        "name": "CRM app",
                        "@type": "ReportingResource",
                        "@referredType": "LogicalResource"
                    },
                    "@baseType": "Event",
                    "@type": "QuoteAttributeValueChangeEvent"
                },
                "description": "Message example for QuoteAttributeValueChangeEvent event"
            },
            "updateQuote_using_json-patch_query_request": {
                "value": [
                    {
                        "op": "replace",
                        "path": "/relatedParty/name?relatedParty.role=Buyer Contact",
                        "value": "Louise Pontus"
                    },
                    {
                        "op": "replace",
                        "path": "/quoteItem/quantity?id=2",
                        "value": 12
                    }
                ],
                "description": "PATCH Quote request leveraging json-patch+json application example"
            },
            "updateQuote_using_json-patch_query_response": {
                "value": {
                    "id": "12dd-78hg",
                    "href": "https://host:port/quoteManagement/v4/quote/12dd-78hg",
                    "category": "BSBS Quote",
                    "description": "Quote illustration",
                    "expectedFulfillmentStartDate": "2019-05-21T12:45:12.028Z",
                    "expectedQuoteCompletionDate": "2019-05-14T12:45:12.028Z",
                    "externalId": [
                        {
                            "@type": "ExternalIdentifierExternalIdentifier",
                            "owner": "TMF",
                            "externalIdentifierType": "Quotenumber",
                            "id": "AK1"
                        }
                    ],
                    "instantSyncQuote": false,
                    "quoteDate": "2019-05-06T12:45:12.028Z",
                    "requestedQuoteCompletionDate": "2019-05-14T12:45:12.028Z",
                    "version": "1",
                    "agreement": [
                        {
                            "id": "7778-jj56",
                            "href": "https://host:port/agreementManagement/v4/agreement/7778-jj56",
                            "name": "Global Agrrement",
                            "@type": "AgreementRef"
                        }
                    ],
                    "billingAccount": [
                        {
                            "id": "BA4569",
                            "href": "https://host:port/accountManagement/v4/billingAccount/BA4569",
                            "@type": "BillingAccountRef"
                        }
                    ],
                    "contactMedium": [
                        {
                            "@type": "EmailContactMedium",
                            "contactMediumIdentifier": "11",
                            "preferred": true,
                            "emailAddress": "jean.pontus@PerfectCustomer.com"
                        }
                    ],
                    "note": [
                        {
                            "id": "1",
                            "author": "Jean Pontus",
                            "date": "2019-05-06T12:45:12.031Z",
                            "text": "This is a quote request following today call"
                        }
                    ],
                    "productOfferingQualification": [
                        {
                            "id": "22ds-ty55",
                            "@type": "ProductOfferingQualificationRef",
                            "href": "https://host:port/productOfferingQualificationManagement/v4/productOfferingQualification/22ds-ty55"
                        }
                    ],
                    "quoteItem": [
                        {
                            "id": "1",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 1,
                            "product": {
                                "@type": "ProductValue",
                                "productCharacteristic": [
                                    {
                                        "@type": "StringCharacteristic",
                                        "id": "Char1",
                                        "name": "Voice Bundle",
                                        "value": "unlimited"
                                    },
                                    {
                                        "@type": "ObjectCharacteristic",
                                        "id": "Char5",
                                        "name": "Data Bundle",
                                        "value": {
                                            "volume": 50,
                                            "unit": "Gb/month"
                                        }
                                    }
                                ],
                                "productSpecification": {
                                    "id": "ssp7-ty89",
                                    "name": "TMF Tariff Plan",
                                    "@type": "ProductSpecificationRef"
                                }
                            },
                            "productOffering": {
                                "id": "54gg-zza1",
                                "name": "TMF Tarif Plan 25",
                                "@type": "ProductOfferingRef"
                            }
                        },
                        {
                            "id": "2",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 12,
                            "product": {
                                "@type": "ProductValue",
                                "productSpecification": {
                                    "id": "qq45-ytr7",
                                    "name": "Handset",
                                    "version": "1",
                                    "@type": "ProductSpecificationRef"
                                }
                            },
                            "productOffering": {
                                "id": "z789-78ga",
                                "name": "TMF handset T9+",
                                "@type": "ProductOfferingRef"
                            }
                        },
                        {
                            "id": "3",
                            "@type": "QuoteItem",
                            "action": "remove",
                            "product": {
                                "@type": "ProductRef",
                                "id": "456",
                                "version": "1"
                            }
                        }
                    ],
                    "relatedParty": [
                        {
                            "name": "Louise Pontus",
                            "role": "Buyer Contact",
                            "@referredType": "Individual"
                        },
                        {
                            "name": "PerfectCustomer",
                            "role": "Buyer organization",
                            "id": "55",
                            "@referredType": "Organization"
                        },
                        {
                            "name": "Joe Doe",
                            "role": "Seller Contact",
                            "id": "45gh-gh89",
                            "@referredType": "Individual"
                        }
                    ],
                    "state": "inProgress",
                    "@type": "Quote"
                },
                "description": "Quote representation."
            },
            "updateQuote_using_merge-patch_json_request": {
                "value": {
                    "id": "12dd-78hg",
                    "category": "BSBS Quote",
                    "description": "Quote illustration",
                    "expectedFulfillmentStartDate": "2019-05-21T12:45:12.028Z",
                    "expectedQuoteCompletionDate": "2019-05-14T12:45:12.028Z",
                    "externalId": [
                        {
                            "@type": "ExternalIdentifierExternalIdentifier",
                            "owner": "TMF",
                            "externalIdentifierType": "Quotenumber",
                            "id": "AK1"
                        }
                    ],
                    "instantSyncQuote": false,
                    "requestedQuoteCompletionDate": "2019-05-14T12:45:12.028Z",
                    "version": "1",
                    "quoteItem": [
                        {
                            "id": "1",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 1,
                            "product": {
                                "@type": "ProductValue",
                                "productCharacteristic": [
                                    {
                                        "@type": "StringCharacteristic",
                                        "id": "Char1",
                                        "name": "Voice Bundle",
                                        "value": "unlimited"
                                    },
                                    {
                                        "@type": "ObjectCharacteristic",
                                        "id": "Char5",
                                        "name": "Data Bundle",
                                        "value": {
                                            "volume": 50,
                                            "unit": "Gb/month"
                                        }
                                    }
                                ],
                                "productSpecification": {
                                    "id": "ssp7-ty89",
                                    "name": "TMF Tariff Plan",
                                    "@type": "ProductSpecificationRef"
                                }
                            },
                            "productOffering": {
                                "id": "54gg-zza1",
                                "name": "TMF Tarif Plan 25",
                                "@type": "ProductOfferingRef"
                            }
                        },
                        {
                            "id": "2",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 12,
                            "product": {
                                "@type": "ProductValue",
                                "productSpecification": {
                                    "id": "qq45-ytr7",
                                    "name": "Handset",
                                    "version": "1",
                                    "@type": "ProductSpecificationRef"
                                }
                            },
                            "productOffering": {
                                "id": "z789-78ga",
                                "name": "TMF handset T9+",
                                "@type": "ProductOfferingRef"
                            }
                        },
                        {
                            "id": "3",
                            "@type": "QuoteItem",
                            "action": "remove",
                            "product": {
                                "@type": "ProductRef",
                                "id": "456",
                                "version": "1"
                            }
                        }
                    ],
                    "relatedParty": [
                        {
                            "name": "Louise Pontus",
                            "role": "Buyer Contact",
                            "@referredType": "Individual"
                        },
                        {
                            "name": "PerfectCustomer",
                            "role": "Buyer organization",
                            "id": "55",
                            "@referredType": "Organization"
                        },
                        {
                            "name": "Joe Doe",
                            "role": "Seller Contact",
                            "id": "45gh-gh89",
                            "@referredType": "Individual"
                        }
                    ],
                    "state": "inProgress",
                    "@type": "Quote"
                },
                "description": "PATCH Quote request leveraging merge-patch+json application example"
            },
            "updateQuote_using_merge-patch_json_response": {
                "value": {
                    "id": "12dd-78hg",
                    "href": "https://host:port/quoteManagement/v4/quote/12dd-78hg",
                    "category": "BSBS Quote",
                    "description": "Quote illustration",
                    "expectedFulfillmentStartDate": "2019-05-21T12:45:12.028Z",
                    "expectedQuoteCompletionDate": "2019-05-14T12:45:12.028Z",
                    "externalId": [
                        {
                            "@type": "ExternalIdentifierExternalIdentifier",
                            "owner": "TMF",
                            "externalIdentifierType": "Quotenumber",
                            "id": "AK1"
                        }
                    ],
                    "instantSyncQuote": false,
                    "quoteDate": "2019-05-06T12:45:12.028Z",
                    "requestedQuoteCompletionDate": "2019-05-14T12:45:12.028Z",
                    "version": "1",
                    "agreement": [
                        {
                            "id": "7778-jj56",
                            "href": "https://host:port/agreementManagement/v4/agreement/7778-jj56",
                            "name": "Global Agrrement",
                            "@type": "AgreementRef"
                        }
                    ],
                    "billingAccount": [
                        {
                            "id": "BA4569",
                            "href": "https://host:port/accountManagement/v4/billingAccount/BA4569",
                            "@type": "BillingAccountRef"
                        }
                    ],
                    "contactMedium": [
                        {
                            "@type": "EmailContactMedium",
                            "contactMediumIdentifier": "11",
                            "preferred": true,
                            "emailAddress": "jean.pontus@PerfectCustomer.com"
                        }
                    ],
                    "note": [
                        {
                            "id": "1",
                            "author": "Jean Pontus",
                            "date": "2019-05-06T12:45:12.031Z",
                            "text": "This is a quote request following today call"
                        }
                    ],
                    "productOfferingQualification": [
                        {
                            "id": "22ds-ty55",
                            "@type": "ProductOfferingQualificationRef",
                            "href": "https://host:port/productOfferingQualificationManagement/v4/productOfferingQualification/22ds-ty55"
                        }
                    ],
                    "quoteItem": [
                        {
                            "id": "1",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 1,
                            "product": {
                                "@type": "ProductValue",
                                "productCharacteristic": [
                                    {
                                        "@type": "StringCharacteristic",
                                        "id": "Char1",
                                        "name": "Voice Bundle",
                                        "value": "unlimited"
                                    },
                                    {
                                        "@type": "ObjectCharacteristic",
                                        "id": "Char5",
                                        "name": "Data Bundle",
                                        "value": {
                                            "volume": 50,
                                            "unit": "Gb/month"
                                        }
                                    }
                                ],
                                "productSpecification": {
                                    "id": "ssp7-ty89",
                                    "name": "TMF Tariff Plan",
                                    "@type": "ProductSpecificationRef"
                                }
                            },
                            "productOffering": {
                                "id": "54gg-zza1",
                                "name": "TMF Tarif Plan 25",
                                "@type": "ProductOfferingRef"
                            }
                        },
                        {
                            "id": "2",
                            "@type": "QuoteItem",
                            "action": "add",
                            "quantity": 12,
                            "product": {
                                "@type": "ProductValue",
                                "productSpecification": {
                                    "id": "qq45-ytr7",
                                    "name": "Handset",
                                    "version": "1",
                                    "@type": "ProductSpecificationRef"
                                }
                            },
                            "productOffering": {
                                "id": "z789-78ga",
                                "name": "TMF handset T9+",
                                "@type": "ProductOfferingRef"
                            }
                        },
                        {
                            "id": "3",
                            "@type": "QuoteItem",
                            "action": "remove",
                            "product": {
                                "@type": "ProductRef",
                                "id": "456",
                                "version": "1"
                            }
                        }
                    ],
                    "relatedParty": [
                        {
                            "name": "Louise Pontus",
                            "role": "Buyer Contact",
                            "@referredType": "Individual"
                        },
                        {
                            "name": "PerfectCustomer",
                            "role": "Buyer organization",
                            "id": "55",
                            "@referredType": "Organization"
                        },
                        {
                            "name": "Joe Doe",
                            "role": "Seller Contact",
                            "id": "45gh-gh89",
                            "@referredType": "Individual"
                        }
                    ],
                    "state": "inProgress",
                    "@type": "Quote"
                },
                "description": "Quote representation."
            }
        }
    }
}